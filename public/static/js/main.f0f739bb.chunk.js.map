{"version":3,"sources":["Components/ThreeMap.js","Components/Likebtn.js","Components/CommentSection.js","Components/SinglePost.js","Components/PostForm.js","Components/user-pages/Signup.js","Components/user-pages/Login.js","Components/EditUser.js","Components/Editpost.js","Components/UserProfile.js","Components/Home.js","Components/FollowerList.js","Components/FollowingList.js","Components/HomeFeed.js","Components/WorldPost.js","Components/NavBar.js","api/service.js","App.js","serviceWorker.js","index.js"],"names":["ThreeMap","getData","a","url","props","this","then","initThree","camera","scene","renderer","console","log","container","document","getElementById","width","clientWidth","height","clientHeight","THREE","position","z","target","orbitControls","Orbitcontrols","autoRotate","enableZoom","ambi","add","spotLight","set","intensity","load","texture","geometry","Math","pi","scale","material","map","mesh","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","init","animate","requestAnimationFrame","render","style","id","Component","Likebtn","className","onClick","onLike","postId","theIcon","CommentSection","allPostComments","type","placeholder","name","value","comment","onChange","e","updateComment","handleComment","exitFullscreen","theCanvas","getElementsByTagName","addEventListener","SinglePost","match","params","thePost","postValues","filter","eachItem","_id","Fragment","goBack","history","src","owner","imageUrl","alt","to","username","image","preventDefault","ele","myDiv","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","likes","length","theArray","myId","findIndex","theId","handleLike","isLiked","currentUser","caption","tags","eachTag","createdAt","Date","toDateString","comments","onChangeValue","PostForm","state","imageFile","redirect","canvasStyle","alignText","textAreaStyle","fontSize","display","textTagsArea","canvasContainer","createButton","formStyle","justifyContent","tagsContainer","border","uploadPost","seePreview","files","size","newImg","URL","createObjectURL","changeFile","changeUrl","setState","changePreview","myInput","setAttribute","removePicture","myFileList","removeAttribute","setTimeout","formValues","postMade","message","onSubmit","handleSubmit","for","React","img","Signup","finished","email","password","Login","EditUser","submitUpdate","bio","handleUpdate","Edit","htmlFor","UserProfile","images","users","showEdit","theUserId","profileId","userFollowers","pics","userDetails","theUser","borderRadius","followers","following","onLogout","handleEditProfile","indexOf","handleFollow","updateUser","pic","key","thePostId","confirmDelete","handleEdit","havePermission","modal","Editpost","updatePost","showConfirm","warning","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","confirmBtnCssClass","title","onConfirm","onDelete","onCancel","cancelDelete","Home","FollowerList","allUsers","followerList","eachUser","FollowingList","followingList","HomeFeed","feedList","userList","allPosts","eachPost","sortedList","sort","b","WorldPost","arrayOfPosts","query","theQuery","toLowerCase","join","includes","NavBar","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","Form","inline","FormControl","queryInput","service","axios","create","baseURL","errorHandler","err","handleUpload","theFile","post","res","data","catch","saveNewThing","newThing","App","imagePost","postImgUrl","newPostUrl","lastUrl","profileImgDefault","selectedFile","singlePost","file_upload_change","formData","FormData","append","postNewExp","uploadData","response","withCredentials","theNewPost","newPost","clone","push","get_data_torender","get","get_notifications","userId","updateForm","currentTarget","changeImgUrl","makeNewUser","theData","loginUser","responseFromServer","userDoc","syncCurrentUser","alert","logoutUser","delete","responseFromBack","theIndex","postToFind","handleDelete","postArray","splice","responseFromBackend","editPost","theValue","postList","imageList","captionToUse","tagToUse","put","theValues","location","showEditUser","listUsers","reload","userToFollow","theUsers","user1","user2","theIndex1","userToFind","theIndex2","newComment","user","exact","path","component","renderPosts","worldRender","myUrl","onUserChange","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0f739bb.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Orbitcontrols from \"three-orbitcontrols\";\r\n\r\n\r\nclass ThreeMap extends Component {\r\n  // state = {\r\n  //   picture: \"\"\r\n  // };\r\n\r\n  async componentDidMount() {\r\n\tawait this.getData()\r\n\t.then(()=>{\r\n       this.initThree()\r\n\t})\r\n  }\r\n\r\n  // GETS DATA FROM STATE\r\n  getData = async () => {\r\n    const {url} = this.props\r\n    if(url){\r\n    // await axios.get(\"http://localhost:5000/api/upload\").then(response => {\r\n    //   this.setState({\r\n    //     picture: response.data\r\n    //   });\r\n    //  });\r\n    }\r\n    return url\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  initThree() {\r\n    const {url} = this.props\r\n    console.log(\"MY URL\");\r\n    console.log(url);\r\n   // let stats;\r\n    let camera, scene, renderer;\r\n   // let group;\r\n    let container = document.getElementById(\"WebGL-output\");\r\n    let width = container.clientWidth,\r\n      height = container.clientHeight;\r\n\r\n   \r\n    init();\r\n    \r\n\r\n    animate();\r\n\r\n    function init() {\r\n      scene = new THREE.Scene();\r\n      // group = new THREE.Group();\r\n      // scene.add( group );\r\n\r\n      camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);\r\n      // camera.position.x = -10;\r\n      // camera.position.y = 15;\r\n      camera.position.z = 1;\r\n      camera.target = new THREE.Vector3(0, 0, 0);\r\n      // camera.lookAt( scene.position );\r\n\r\n      //TO CONTROL THE IMAGE MOVEMENT\r\n      let orbitControls = new /*THREE.OrbitControls*/ Orbitcontrols(camera, container);\r\n      orbitControls.autoRotate = false;\r\n      orbitControls.enableZoom = false;\r\n      // let clock = new THREE.Clock();\r\n      //THE AMBIENT LIGHT\r\n      let ambi = new THREE.AmbientLight(0x686868);\r\n      scene.add(ambi);\r\n\r\n      let spotLight = new THREE.DirectionalLight(0xffffff);\r\n      spotLight.position.set(550, 100, 550);\r\n      spotLight.intensity = 0.6;\r\n\r\n      scene.add(spotLight);\r\n      // Texture\r\n      let loader = new THREE.TextureLoader();\r\n      \r\n   \r\n      loader.load(url, function(texture) {\r\n        // let geometry = new THREE.SphereGeometry( 200, 20, 20 );\r\n        let geometry = new THREE.SphereGeometry(500, 60, Math.pi * 2);\r\n        geometry.scale(-1, 1, 1);\r\n        let material = new THREE.MeshBasicMaterial({ map: texture });\r\n        let mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n      });\r\n    \r\n      renderer = new THREE.WebGLRenderer();\r\n      renderer.setClearColor(0xffffff);\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(width, height);\r\n      container.appendChild(renderer.domElement);\r\n      // stats = new Stats();\r\n      // container.appendChild( stats.dom );  //Increase status information\r\n    }\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      render();\r\n      // stats.update();\r\n    }\r\n    function render() {\r\n      renderer.render(scene, camera); \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n    \r\n    <div>  \r\n\r\n      {/* <h4>\r\n      <Link href=\"/details\">Details</Link>\r\n      </h4> */}\r\n\r\n        <div\r\n          style={{\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n          }}\r\n          id=\"WebGL-output\"\r\n         \r\n        />\r\n         \r\n        \r\n\r\n        </div>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreeMap;\r\n","import React from 'react';\r\n\r\nconst Likebtn = (props) => {\r\n    return (\r\n        <button className=\"likeBtn\" onClick={() => props.onLike(props.postId)}><i className={props.theIcon}></i></button>\r\n    )\r\n}\r\n\r\nexport default Likebtn\r\n\r\n","import React from 'react';\r\n\r\nconst CommentSection = (props) => {\r\n    console.log(\"LIST COMMENT\")\r\n    console.log(props.allPostComments)\r\n    return (\r\n        <div>COMMENT SECTION\r\n        <div className=\"listOfComments\">\r\n        </div>\r\n        <input type='text' placeholder=\"Write a comment....\" name='comment' className='commentInput' value={props.comment} onChange={e => {props.updateComment(e)}}></input>\r\n        <button onClick={e => {props.handleComment(e, props.postId)}}>SEND</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentSection","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport Likebtn from './/Likebtn';\r\nimport CommentSection from './CommentSection';\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet height = \"50vh\"\r\nlet width = \"100vw\"\r\nvar requestFullscreen = function (ele) {\r\n\tif (ele.requestFullscreen) {\r\n\t\tele.requestFullscreen();\r\n\t} else if (ele.webkitRequestFullscreen) {\r\n\t\tele.webkitRequestFullscreen();\r\n\t} else if (ele.mozRequestFullScreen) {\r\n\t\tele.mozRequestFullScreen();\r\n\t} else if (ele.msRequestFullscreen) {\r\n\t\tele.msRequestFullscreen();\r\n\t} else {\r\n\t\tconsole.log('Fullscreen API is not supported.');\r\n\t}\r\n};\r\n\r\n\r\nvar exitFullscreen = function () {\r\n       let theCanvas = document.getElementsByTagName('canvas')[0];\r\n          console.log(theCanvas);\r\n          if(theCanvas.style.height === \"100vh\"){\r\n            theCanvas.style.height = \"50vh\"\r\n          }else{\r\n            theCanvas.style.height =\"100vh\"\r\n          }\r\n};\r\n\r\nwindow.addEventListener('fullscreenchange', exitFullscreen);\r\nwindow.addEventListener('webkitfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('mozfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('MSFullscreenChange', exitFullscreen);\r\n\r\nconst SinglePost = props => {\r\n\r\n      \r\n\r\n        // getData = async() => { \r\n        //     // return this.props.myUrl\r\n        //     try {\r\n        //         await axios.get(`http://localhost:5000${this.props.match.url}`).then(response => {\r\n        //           this.setState({\r\n        //             images: response.data\r\n        //           });\r\n        //         });\r\n        //       } catch (err) {\r\n        //         console.log(err);\r\n        //       }\r\n        // }\r\n        function goBack(){\r\n          const  { goBack } = props.history\r\n          goBack();\r\n         }\r\n\r\n        function isLiked(value, theArray, postId){\r\n          if(value){\r\n             const myId = value._id;\r\n            //  console.log(theArray)\r\n            //  console.log(theArray.findIndex(theId => theId._id === myId))\r\n             if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n               return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIcon\"/>)\r\n             }else{\r\n                return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIcon\"/>)\r\n             }\r\n          }\r\n       }\r\n\r\n        const fullScreen = (e) => {\r\n          e.preventDefault();\r\n          let myDiv = document.getElementById('WebGL-output');\r\n         requestFullscreen(myDiv)\r\n        }\r\n\r\n        //GET THE POST CREATION DATE\r\n        const postTime = (e) => {\r\n          return new Date(e).toDateString()\r\n        }\r\n\r\n\r\n        console.log(\"PROPS!\")\r\n      console.log(props)\r\n      const id = props.match.params.id\r\n\r\n      const theArr = props.postValues.filter(eachItem => {\r\n        return eachItem._id === id\r\n      })\r\n\r\n      const thePost = theArr[0];\r\n\r\n        if(thePost){\r\n            return(\r\n              <React.Fragment>\r\n              <button onClick={goBack}>Go back</button>\r\n                <div className=\"singlePost\">\r\n                <div className=\"singlePostHeader\">\r\n                <img src={thePost.owner.imageUrl} width=\"50px\" height=\"50px\" alt=\"miniProfilePic\"></img>\r\n            <Link to={`/profile/${thePost.owner._id}`}>{thePost.owner.username}</Link>\r\n                \r\n                </div>\r\n                <ThreeMap url={thePost.image} height={height} width={width}/>\r\n                <div>{}</div>\r\n                <button onClick={fullScreen}>GO FULLSCREEN</button>\r\n                <div className=\"singleFooter\">\r\n                <div className=\"singleLikes\">\r\n                {thePost.likes.length} Likes\r\n                {isLiked(props.currentUser, thePost.likes, thePost._id)}\r\n                </div>\r\n                {thePost.caption}\r\n                <div className='tagName'>\r\n                {thePost.tags.map(eachTag => {\r\n                  return <Link>#{eachTag} </Link>\r\n                }\r\n                  )}\r\n                </div>\r\n                </div>\r\n               <p>{postTime(thePost.createdAt)}</p>\r\n               {props.currentUser && <CommentSection comment={props.comment} allPostComments={thePost.comments} updateComment={props.onChangeValue} handleComment={props.handleComment} postId={thePost._id}/>}\r\n               \r\n                </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <div>OH NO!</div>\r\n        )\r\n      \r\n   \r\n\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass PostForm extends React.Component{\r\n\r\n    \r\n     state = {\r\n    imageUrl: \"\",\r\n    imageFile: [],\r\n    redirect: false,\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {\r\n            this.setState({redirect: true})}, 2000)\r\n    }\r\n\r\n    //STYLING \r\n    canvasStyle = {\r\n        height: \"200px\",\r\n        width: \"600px\"\r\n    }\r\n\r\n    height = \"350px\"\r\n    width = \"62vw\"\r\n\r\n    style = {\r\n        \"display\": \"block\",\r\n        \"margin-top\": \"100px\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n        \"max-width\": \"600px\",\r\n        \"height\": \"300px\",\r\n        alignText: \"center\",\r\n        \"border\": \"1px solid black\"\r\n    }\r\n\r\n    textAreaStyle = {\r\n        height: \"100px\",\r\n        width: \"40vw\",\r\n        \"margin\": \"20px auto\",\r\n        'resize': 'none',\r\n        fontSize: \"20px\",\r\n        display: \"block\"\r\n    }\r\n\r\n    textTagsArea = {\r\n        height: \"50px\",\r\n        width: \"40vw\",\r\n        'margin-right': '50px'\r\n    }\r\n\r\n    canvasContainer = {\r\n        \"display\": \"block\",\r\n        \"border\": \"1px solid green\", \r\n        \"margin\": \"20px 18vw\",\r\n        height: \"350px\",\r\n        width: \"62vw\"\r\n    }\r\n\r\n    createButton = {\r\n        \"display\": \"block\",\r\n        \"margin\": \"auto\"\r\n\r\n    }\r\n\r\n    formStyle = {\r\n        justifyContent: \"center\",\r\n        alignText: \"center\"\r\n    }\r\n\r\n    tagsContainer = {\r\n        display: \"flex\",\r\n        'justify-content': 'flex-start',\r\n        'align-items': \"center\",\r\n        border: \"1px solid black\",\r\n\r\n    }\r\n// END OF STYLING\r\n\r\n    uploadPost = (e) => {\r\ne.preventDefault();\r\nconsole.log(e.target);\r\n    }\r\n\r\n    seePreview = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(e.target.files);\r\n        if(e.target.files[0] && e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        this.props.changeFile(e.target.files[0])\r\n        this.props.changeUrl(newImg)\r\n    \r\n        this.setState({\r\n            imageUrl: newImg,\r\n            imageFile: e.target.files[0]})\r\n\r\n        this.changePreview(newImg)\r\n        \r\n        let myInput = document.getElementById('myFileList')\r\n        myInput.setAttribute('disabled', true);\r\n        myInput.className = \"inputDisabled\"\r\n    }else{\r\n        this.props.changeFile(e.target.files[0])\r\n    }\r\n    }\r\n\r\n    changePreview = (value) => {\r\n    \r\n        return (\r\n            <div style={this.canvasStyle}>\r\n            {this.state.imageUrl && <ThreeMap url={value} height={this.height} width={this.width}/>}\r\n            </div>\r\n        )\r\n   \r\n    }\r\n\r\n    // changeText = (e) =>{\r\n    //     this.setState({\r\n    //         [e.currentTarget.name]: e.currentTarget.value\r\n    //     })\r\n    // }\r\n\r\n    removePicture = (e) => {\r\n       e.preventDefault();\r\n        let myFileList = document.getElementById('myFileList');\r\n        myFileList.removeAttribute('disabled');\r\n        myFileList.value = null\r\n        myFileList.className = \"inputfile\"\r\n        this.setState({imageUrl: \"\",\r\n        imageFile: []\r\n    })\r\n    }\r\n\r\n    render(){\r\n        const {caption, tags, currentUser, postMade} = this.props.formValues\r\n        if(currentUser && !postMade){\r\n        return(\r\n            <div className=\"formPost\">\r\n            <h1>New Post</h1>\r\n            {this.props.formValues.message}\r\n            <form style={this.formStyle} onSubmit={this.props.handleSubmit}>\r\n\r\n            <input type=\"file\" onChange={this.seePreview} id=\"myFileList\" className=\"inputfile\"></input>\r\n            <label for=\"myFileList\">Choose a file</label>\r\n            <label>(File size max 10 Mb)</label>\r\n\r\n            <button onClick={this.removePicture} className=\"removeBtn\">REMOVE</button>\r\n          \r\n            \r\n            <div style={this.canvasContainer} id=\"myCanvasContainer\">\r\n            {this.changePreview(this.state.imageUrl)}\r\n            </div>\r\n           \r\n           \r\n            <textarea style={this.textAreaStyle} type=\"text\" value={caption} onChange={ e => this.props.onChangeValue(e)} name=\"caption\" placeholder=\"write a caption...\"></textarea>\r\n           <div style={this.tagsContainer}>\r\n           <span className=\"tagTitleAndTextarea\">\r\n           <span className=\"tagsTitle\">Tags: </span>\r\n           <textarea style={this.textTagsArea} type=\"text\" value={tags} onChange={ e => this.props.onChangeValue(e)} name=\"tags\" placeholder=\"e.g: #Beach #Sun #Ocean\"></textarea>\r\n           </span>\r\n           </div>\r\n\r\n            <button style={this.createButton}>CREATE NEW EXPERIENCE</button>\r\n            </form>\r\n\r\n            <div>\r\n          \r\n            </div>\r\n            </div>\r\n        )\r\n    }else if(currentUser && postMade){\r\n       return( <Redirect to='/world'/> )\r\n    }else if(this.state.redirect){\r\n        return( <Redirect to='/login'/> )\r\n    }else{\r\n        return (<div>LOADING...</div>)\r\n    }\r\n    }\r\n\r\n}\r\n//<img src={this.state.imageUrl} alt=\"Choose a file\" height=\"300px\" width=\"500px\"></img>\r\nexport default PostForm;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n// import the service file since we need it to send (and get) the data to(from) server\r\n\r\nlet img = \"\"\r\n\r\nclass Signup extends React.Component{\r\n\r\n \r\n     finished = false;\r\n\r\n\r\n    seePreview = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.files[0]);\r\n        if(e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        img = newImg;\r\n        this.props.changeFile(e.target.files[0])\r\n    }\r\n        // this.setState({imageFile: e.target.files[0]})\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        const {username, email, password} = this.props.formValues\r\n        if(this.finished || this.props.currentUser){\r\n            return (\r\n                <Redirect to={`/profile/${this.props.currentUser._id}`}/>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"SignupForm\">\r\n            <section>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={this.props.handleSubmit}>\r\n            <label>Username: </label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Email: </label>\r\n            <input type=\"email\" name=\"email\" value={email} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Password </label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Image </label>\r\n            <input type=\"file\" onChange={this.seePreview} name=\"imageFile\"></input>\r\n            <img src={img} alt=\"Choose a file\"></img>\r\n            <button>Submit</button>\r\n            </form>\r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Signup;\r\n\r\n   // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         username: \"\",\r\n    //         email: \"\",\r\n    //         password: \"\",\r\n    //         imageUrl: \"\",\r\n    //         imageFile: [],\r\n    //         finished: false\r\n    //     }\r\n    // }\r\n\r\n    \r\n    // updateValueField = (e) => {\r\n    //     console.log(e.target)\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // makeNewUser = (e) => {\r\n    //     e.preventDefault();\r\n    //     if(this.state.imageFile.length > 0){\r\n    //                //UPLOAD TO CLOUDINARY\r\n    //                const uploadData = new FormData();\r\n    //                uploadData.append(\"imageUrl\", this.state.imageFile);\r\n           \r\n    //                service.handleUpload(uploadData)\r\n    //                .then(response => {\r\n    //                    // console.log('response is: ', response);\r\n    //                    // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n    //                    this.setState({ imageUrl: response.secure_url });\r\n\r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n               \r\n               \r\n    //                  })\r\n    //                  .catch(err => {\r\n    //                    console.log(\"Error while uploading the file: \", err);\r\n    //                  });\r\n    //                 }else{\r\n                       \r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n                \r\n    //                 }\r\n\r\n             \r\n    // }","import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nclass Login extends React.Component {\r\n\r\n    message = null\r\n\r\n    render(){\r\n        const { username, password, currentUser } = this.props.formValues\r\n        if(currentUser){\r\n            return (\r\n                <Redirect to={`/home`}/>\r\n            )\r\n        }else{\r\n        return(\r\n            <div>\r\n            <section>\r\n\r\n            <h2> Login </h2>\r\n\r\n            <form onSubmit ={this.props.handleSubmit} >\r\n\r\n                <label> Username: </label>\r\n                 <input value={username} onChange={ e => this.props.onChangeValue(e)} type=\"text\" name=\"username\" placeholder=\"username\" />\r\n\r\n\r\n\r\n                <label> Password</label>\r\n                <input value={password} onChange={ e => this.props.onChangeValue(e)} type=\"password\" name=\"password\" placeholder=\"***********\"/>\r\n                 <button> Login </button>\r\n\r\n            </form>\r\n\r\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\r\n\r\n            { this.message && <div> { this.message } </div> }\r\n\r\n        </section>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         username: \"\",\r\n    //         password: \"\",\r\n    //         message: null\r\n    //     }\r\n    // }\r\n\r\n    // genericSync(event){\r\n    //     const {name, value} = event.target;\r\n    //     this.setState({[name]: value})\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     event.preventDefault();\r\n\r\n    //     Axios.post('http://localhost:5000/auth/login', this.state, {withCredentials: true})\r\n    //     .then(responseFromServer => {\r\n    //         console.log(responseFromServer.data.userDoc)\r\n    //         const { userDoc } = responseFromServer.data;\r\n    //         this.props.onUserChange(userDoc);\r\n          \r\n    //         alert(\"You are logged in.\")\r\n    //         // return <Redirect to='/profile'/>\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err)\r\n    //         // if(err.response.data) return this.setState({message: err.response.data.message})\r\n    //     })\r\n    // }","import React from 'react';\r\n\r\n//let img = ''\r\n\r\nconst EditUser = (props) => {\r\n    const { currentUser } = props\r\n\r\n    function changeFile(e){\r\n        if(e.target.files[0].size <= 10485760){\r\n            // let newImg = URL.createObjectURL(e.target.files[0])\r\n           // img = newImg;\r\n            props.changeFile(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <form onSubmit={ e => props.submitUpdate(e, currentUser)}>\r\n        <input type='file' onChange={e => changeFile(e)}></input>\r\n        <textarea type=\"text\" name=\"bio\" placeholder={currentUser.bio} onChange={e => props.handleUpdate(e)} />\r\n        <button>Update profile</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;","import React from 'react'\r\n\r\nconst Edit = (props) => {\r\n    const { image } = props\r\nreturn (\r\n    <div>\r\n            <h5>Welcome to the edit Form</h5>\r\n            <form onSubmit={e => props.submitUpdate(e, image)} >\r\n                <label htmlFor=\"tags\"> Tags </label>\r\n                <input type=\"text\" name=\"tags\" placeholder={image.tags} value={props.tags} onChange={e => props.handleUpdate(e)} />\r\n                <textarea type=\"text\" name=\"caption\" placeholder={image.caption} value={props.caption} onChange={e => props.handleUpdate(e)} />\r\n                <button className=\"btn btn-sm btn-success\">Save</button>\r\n            </form>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Edit","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport EditUser from './EditUser'\r\nimport Editpost from '../Components/Editpost'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\n\r\n\r\nconst UserProfile = (props) => {\r\n    const { images, currentUser, users, showEdit } = props\r\n    const theUserId = currentUser._id\r\n    const profileId = props.match.params.id\r\n\r\n    function goBack(){\r\n        const  { goBack } = props.history\r\n        goBack();\r\n       }\r\n\r\n    function haveLogout(userFollowers){\r\n        if(theUserId === profileId){\r\n            return   <div className=\"buttons\" >\r\n            <button\r\n                onClick={props.onLogout}\r\n                className=\"btn btn-sm btn-danger\">\r\n                Logout\r\n            </button>\r\n            <button onClick={props.handleEditProfile}>Edit Profile</button>\r\n\r\n        </div>\r\n        }else{\r\n            if(userFollowers.indexOf(theUserId) >= 0){\r\nreturn (\r\n    <button\r\n                    className=\"btn btn-sm  btn-primary\"\r\n                    onClick={e => props.handleFollow(profileId)}\r\n                >\r\n                    <i className=\"fa fa-user-minus\"> Unfollow </i>\r\n                </button>\r\n)\r\n        }else{\r\n            return (\r\n                <button\r\n                                className=\"btn btn-sm  btn-primary\"\r\n                                onClick={e => props.handleFollow(profileId)}\r\n                            >\r\n                                <i className=\"fa fa-user-plus\"> Follow </i>\r\n                            </button>\r\n            )\r\n        }\r\n    }\r\n    }\r\n\r\n    function havePermission(thePostId){\r\n        if(theUserId === profileId){\r\n        return (\r\n        <React.Fragment>\r\n        <button className=\"btn btn-sm btn-danger\" onClick={e => props.confirmDelete()} >\r\n        Delete\r\n        </button>\r\n        <button onClick={ e => {props.handleEdit(e, thePostId)}}>Edit</button>\r\n    </React.Fragment>)\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    const pics = images.filter(image => image.owner._id === profileId)\r\n\r\n    const userDetails = users.filter(theUser => theUser._id === profileId)[0]\r\n    if (currentUser && userDetails) {\r\n        return (\r\n            <div>\r\n            {(theUserId !== profileId) ? <button onClick={goBack}>Go back</button> : ''}\r\n                <div className=\"user-profile\">\r\n                    {currentUser && <img src={userDetails.imageUrl} style={{ borderRadius: 70, width: \"150px\", height: \"150px\"}} alt=\"profile-img\" />}\r\n                    <p>{userDetails.username}</p>\r\n                    <p>{userDetails.bio}</p>\r\n                    <Link to={`/followers/${profileId}`}><span className=\"followUser\">Followers: {userDetails.followers.length}</span></Link> \r\n                  <Link to={`/following/${profileId}`}> <span className=\"followUser\">Following: {userDetails.following.length}</span></Link> \r\n                  \r\n                  {haveLogout(userDetails.followers)}\r\n                  {showEdit && <EditUser handleUpdate={props.onChangeValue} currentUser={currentUser} submitUpdate={props.updateUser} changeFile={props.changeFile}/>}\r\n                </div>\r\n                    <div className=\"worldContainer\" >\r\n                        {pics && pics.map(pic => {\r\n                            return (\r\n                            <div className=\"col col-s-12 worldPost\" key={pic._id} >\r\n                                <div className=\"worldImgContainer\">\r\n                                    <img className=\"worldImg\" src={pic.image} alt=\"worldPic\" width=\"100%\" height=\"300px\" />\r\n                                    <Link to={`/post/${pic._id}`}> <div className=\"overlayContainer\" >\r\n                                        <div className=\"textOverlay\" id={pic._id}>See the full Post</div>\r\n                                    </div>\r\n                                    </Link>\r\n                                </div>\r\n                                {havePermission(pic._id)}\r\n                                {pic.modal && <Editpost image={pic} handleUpdate={props.onChangeValue} submitUpdate={props.updatePost}></Editpost>}\r\n\r\n\r\n                                {props.showConfirm === true &&\r\n                                    <SweetAlert\r\n                                        warning\r\n                                        showCancel\r\n                                        confirmBtnText=\"Confirm!\"\r\n                                        confirmBtnBsStyle=\"danger\"\r\n                                        cancelBtnBsStyle=\"default\"\r\n                                        confirmBtnCssClass=\"confirmDelete\"\r\n                                        title=\"Are you sure?\"\r\n                                        onConfirm={e => props.onDelete(pic._id)}\r\n                                        onCancel={e => props.cancelDelete()}\r\n                                    >\r\n                                        Do you want to delete this post?\r\n                               </SweetAlert>\r\n                                }\r\n\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }       \r\n                        </div>\r\n                {!pics.length && <p>You dont have any posts </p>}\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div>LOADING...</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;\r\n\r\n// class Profile extends React.Component{\r\n  \r\n\r\n// render(){\r\n//     const { currentUser } = this.props\r\n//     if(currentUser !== null){\r\n//         return (\r\n//             <div>\r\n//             <h1> HELL YEAH! PROFILE PAGE!</h1>\r\n//            </div>\r\n//         )\r\n//     }else{\r\n//     return (\r\n//         <div>GO TO LOGING PAGE!</div>\r\n//     )\r\n// }\r\n// }\r\n    \r\n// }\r\n\r\n// export default Profile;","import React from 'react';\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"HomePage\">\r\n            <div className=\"HomeItem\"></div>\r\n            <div className=\"HomeItem\"></div>\r\n            <div className=\"HomeItem\"></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FollowerList = props => {\r\nconst allUsers = props.allUsers\r\nconst theId = props.match.params.id\r\nconst followerList = allUsers.filter(eachUser => {return eachUser.following.indexOf(theId) >= 0})\r\nconsole.log(props)\r\n\r\nfunction goBack(){\r\n    const  { goBack } = props.history\r\n    goBack();\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <button onClick={goBack}>Go back</button>\r\n        <div>FOLLOWERS</div>\r\n        {followerList.map(eachUser => {\r\n            return <div key={eachUser.username}>\r\n                <div>\r\n                <img src={eachUser.imageUrl} style={{ borderRadius: 70, width: \"80px\", height: \"80px\"}} alt=\"profile-img\" />\r\n                </div>\r\n                <Link to={`/profile/${eachUser._id}`}>{eachUser.username}</Link>\r\n                </div>\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FollowerList","import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\nconst FollowingList = props => {\r\n    const allUsers = props.allUsers\r\n    const theId = props.match.params.id\r\n    const followingList = allUsers.filter(eachUser => {return eachUser.followers.indexOf(theId) >= 0})\r\n\r\n   function goBack(){\r\n    const  { goBack } = props.history\r\n    goBack();\r\n   }\r\n\r\n\r\n        return (\r\n            <div>\r\n            <button onClick={goBack}>Go back</button>\r\n            <div>FOLLOWING LIST</div>\r\n            {followingList.map(eachUser => {\r\n                return <div key={eachUser.username}>\r\n                    <div>\r\n                    <img src={eachUser.imageUrl} style={{ borderRadius: 70, width: \"80px\", height: \"80px\"}} alt=\"profile-img\" />\r\n                    </div>\r\n                    <Link to={`/profile/${eachUser._id}`}>{eachUser.username}</Link>\r\n                    </div>\r\n            })}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FollowingList","import React from 'react';\r\nimport Likebtn from './Likebtn'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeFeed = props => {\r\n    let feedList = []\r\n    let userList = []\r\nconst {currentUser, allPosts} = props\r\nif(currentUser){\r\n     userList = currentUser.following\r\n    if(allPosts.length){\r\n        feedList = allPosts.filter(eachPost => { return userList.indexOf(eachPost.owner._id) >= 0 || eachPost.owner._id === currentUser._id })\r\n    }\r\n}\r\n\r\nfunction isLiked(value, theArray, postId){\r\n    if(value){\r\n       const myId = value._id;\r\n       if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n         return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIcon\"/>)\r\n       }else{\r\n          return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIcon\"/>)\r\n       }\r\n    }\r\n }\r\n\r\n  //GET THE POST CREATION DATE\r\n  const postTime = (e) => {\r\n    return new Date(e).toDateString()\r\n  }\r\n\r\n //SORT ALL THE IMAGES FROM THE RECENT TO THE OLDEST ONE\r\nconst sortedList = feedList.sort((a, b) => {\r\n    return new Date(b.createdAt) - new Date(a.createdAt)\r\n})\r\n\r\n    if(currentUser !== null){\r\n        return(\r\n            <div>\r\n\r\n            <div>\r\n            {feedList.length > 0 ? sortedList.map(eachPost => {\r\n                return <div className=\" col-s-12 feedPost\" key={eachPost._id} >\r\n            <div>\r\n            <img src={eachPost.owner.imageUrl} width=\"50px\" height=\"50px\" alt=\"miniProfilePic\"></img>\r\n            \r\n           <Link to={`/profile/${eachPost.owner._id}`}> {eachPost.owner.username}</Link>\r\n            </div>\r\n\r\n            <div className=\"worldImgContainer\">\r\n            <img  className=\"worldImg\" src={eachPost.image}  alt=\"worldPic\" width=\"100%\" height=\"300px\"></img>\r\n\r\n            <Link to={`/post/${eachPost._id}`}> <div className=\"overlayContainer\" >\r\n            <div className=\"textOverlay\" id={eachPost._id}>See the full Post</div>\r\n            </div>\r\n            </Link>\r\n            </div>\r\n            <p>{eachPost.likes.length} Likes</p>\r\n            {isLiked(props.currentUser, eachPost.likes, eachPost._id)}\r\n            <p>{eachPost.caption}</p>\r\n            <p>{postTime(eachPost.createdAt)}</p>\r\n            </div>\r\n            }): <div>START FOLLOWING PEOPLE <Link to='/world'>(SEE WORLD) </Link>OR UPLOAD YOUR OWN EXPERIENCES!</div>}\r\n            </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return  <div>LOADING...</div>\r\n    }\r\n\r\n}\r\n\r\nexport default HomeFeed","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Likebtn from './Likebtn';\r\n\r\nconst WorldPost = props => {\r\n\r\n   console.log(props)\r\n   let arrayOfPosts = []\r\n\r\n   function isLiked(value, theArray, postId){\r\n      console.log(\"LIST OF LIKES\")\r\n      console.log(theArray)\r\n      if(value){\r\n         const myId = value._id;\r\n         if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n           return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIcon\"/>)\r\n         }else{\r\n            return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIcon\"/>)\r\n         }\r\n      }\r\n   }\r\nlet {query} = props\r\n// console.log(props.allPosts)\r\n\r\n\r\nif(query !== ''){\r\n   let theQuery = query.toLowerCase();\r\nlet queryList = props.allPosts.filter(eachPost => { return  eachPost.tags.join('').toLowerCase().includes(theQuery)})\r\narrayOfPosts = queryList\r\n}else{\r\n   if(props.allPosts.length > 0){\r\n   arrayOfPosts = props.allPosts\r\n   }\r\n}\r\n\r\nif(arrayOfPosts.length > 0){\r\n     return(\r\n        <React.Fragment>\r\n         <div>\r\n         <h1>World</h1>\r\n         <div className=\"worldContainer\">\r\n         {arrayOfPosts && arrayOfPosts.map(image => {\r\n            return <div className=\"worldPost\" key={image._id} >\r\n            <div>\r\n            <img src={image.owner.imageUrl} width=\"50px\" height=\"50px\" alt=\"miniProfilePic\"></img>\r\n            \r\n           <Link to={`/profile/${image.owner._id}`}> {image.owner.username}</Link>\r\n            </div>\r\n\r\n            <div className=\"worldImgContainer\">\r\n            <img  className=\"worldImg\" src={image.image}  alt=\"worldPic\" width=\"100%\" height=\"300px\"></img>\r\n\r\n            <Link to={`/post/${image._id}`}> <div className=\"overlayContainer\" >\r\n            <div className=\"textOverlay\" id={image._id}>See the full Post</div>\r\n            </div>\r\n            </Link>\r\n            </div>\r\n            <p>{image.likes.length} Likes</p>\r\n            {isLiked(props.currentUser, image.likes, image._id)}\r\n            </div>\r\n         })}\r\n         \r\n         </div>\r\n         </div>\r\n        </React.Fragment>\r\n     )\r\n   }else{\r\n      return (\r\n         <div>NO POSTS!</div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default WorldPost;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl} from 'react-bootstrap'\r\n\r\nconst NavBar = (props) =>{\r\n  \r\nif(props){\r\n        return(\r\n          <React.Fragment>\r\n          <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n          <Navbar.Brand href=\"/home\">React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {props.currentUser ? <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/world\">World</Nav.Link>\r\n              <Nav.Link href=\"/newPost\">New Experience</Nav.Link>\r\n              <NavDropdown title=\"Notifications\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" value={props.queryInput}  onChange={ e => {props.onChangeValue(e)}} name='queryInput' className=\"mr-sm-2\" />\r\n            </Form>\r\n            <Link to={`/profile/${props.currentUser._id}`}>Profile</Link>\r\n              </Nav> : \r\n              <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/login\">Login</Nav.Link>\r\n              <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n              </Nav>\r\n            }\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        </React.Fragment>\r\n        )\r\n          }\r\n        }\r\n\r\nexport default NavBar;\r\n","import axios from 'axios';\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n    // withCredentials: true // => you might need this when having the users in the app \r\n  });\r\n\r\nconst errorHandler = err => {\r\n    // console.error(err);\r\n    throw err;\r\n  };\r\n  \r\n  export default {\r\n    service,\r\n  \r\n    handleUpload (theFile) {\r\n      // console.log('file in service: ', theFile)\r\n      return service.post('/upload', theFile)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    },\r\n  \r\n    saveNewThing (newThing) {\r\n      // console.log('new thing is: ', newThing)\r\n      return service.post('/things/create', newThing)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    }\r\n  }","import React, { Component } from \"react\";\nimport {Switch, Route, Redirect } from 'react-router-dom'\nimport SinglePost from './Components/SinglePost';\nimport PostForm from './Components/PostForm';\nimport Signup from './Components/user-pages/Signup'\nimport Login from './Components/user-pages/Login'\nimport UserProfile from './Components/UserProfile';\nimport Home from './Components/Home';\nimport FollowerList from './Components/FollowerList'\nimport FollowingList from './Components/FollowingList'\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport HomeFeed from './Components/HomeFeed';\nimport WorldPost from './Components/WorldPost';\nimport NavBar from \"./Components/NavBar\";\n//CLOUDINARY\nimport service from './api/service';\n\n\nclass App extends Component {\n\n    state = {\n      users: [],\n      currentUser: null,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      imageUrl: \"\",\n      bio: \"\",\n      imagePost: \"\",\n      caption: \"\",\n      tags: [],\n      imageFile: [],\n      comment: '',\n      showConfirm: false,\n      url: \"http://localhost:5000/api/things\",\n      postImgUrl: \"http://localhost:5000/api/upload\",\n      newPostUrl: 'http://localhost:5000',\n      lastUrl: '/world',\n      images: [],\n      profileImgDefault: 'https://res.cloudinary.com/thejacex/image/upload/v1572846104/emptyImage_qqqtqp.png',\n      selectedFile: null,\n      postMade: false,\n      message: \"\",\n      singlePost: null,\n      showEdit: false,\n      queryInput: ''\n    };\n  \n  // state = {\n  //   url: \"http://localhost:5000/api/things\",\n  //   images: []\n  // };\n\n  async componentDidMount() {\n    await this.get_data_torender() \n\n    axios.get('http://localhost:5000/auth/loggedin', {withCredentials: true})\n    .then(responseFromBackend => {\n      const { userDoc } = responseFromBackend.data\n      console.log(userDoc)\n      this.syncCurrentUser(userDoc);\n      setTimeout(() => {this.get_notifications(userDoc._id) }, 500)\n    })\n    .catch(err => console.log(\"Error while getting the user from the loggedin route \", err))\n  }\n\n  syncCurrentUser(user){\n    this.setState({ currentUser: user})\n  }\n\n  file_upload_change = e => {\n    const formData = new FormData();\n    formData.append(\"imageUrl\", e.target.files[0]);\n    if(!formData === \"\"){\n      this.setState({\n        selectedFile: formData\n      });\n    }\n  };\n\n  // MAKE A NEW POST\n  postNewExp = async(e) => {\n    e.preventDefault();\n//UPLOAD TO CLOUDINARY\nif(this.state.imageFile !== []){\nconst uploadData = new FormData();\nawait uploadData.append(\"imageUrl\", this.state.imageFile);\n\n service.handleUpload(uploadData)\n.then(response => {\n    console.log('response is: ', response);\n    // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n    this.setState({imagePost: response.imageUrl }, () => {\n\n //CALL TO THE NEW POST ROUTE\n axios.post('http://localhost:5000/createNewPost', this.state, {withCredentials: true})\n .then(theNewPost => {\n     console.log(\"NEW POST!\")\n     console.log(theNewPost.data)\n     const newPost = theNewPost.data\n     const clone = [...this.state.images]\n     clone.push(newPost);\n     this.setState({postMade: true,\n    caption: \"\",\n  images: clone})\n\n     setTimeout(\n       this.setState({postMade: false}), 2000)\n })\n .catch(err => console.log(err));\n\n\n})\n      \n    })\n    .catch(err => {\n      console.log(\"Error while uploading the file: \", err);\n      console.log(err)\n    });\n   \n  }\n}\n\n\n  // GET ALL THE POSTS TO RENDER FROM DB\n  get_data_torender = async () => {\n    try {\n      // const {url} = this.state\n      await axios.get(\"http://localhost:5000/createNewPost\").then(response => {\n        console.log(response)\n        this.setState({\n          images: response.data\n        });\n      })\n    } catch (err) {\n      console.log(err);\n    }\n\n    axios.get(\"http://localhost:5000/users\").then(response => {\n      console.log(response)\n\n      this.setState({users: response.data})\n    })\n\n\n\n  };\n  //END OF GET ALL THE POSTS TO RENDER FROM DB\n\n  //GET ALL NOTIFICATIONS FROM DB\nget_notifications = async (userId) => {\n  try{\n\n    await axios.get(`http://localhost:5000/getNotifications/${userId}`).then(response => {\n      console.log(\"NOTIFICATIONS!\")\n      console.log(response)\n    }).catch(err => console.log(err))\n\n    \n  } catch (err){\n    console.log(err)\n  }\n}\n\n  //END OF GET ALL NOTIFICATIONS FROM DB\n\n  //uPDATE FORMS VALUES\n  updateForm = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  //CHANGE IMAGE URL\n  changeImgUrl = (e) => {\nthis.setState({imageUrl: e})\n  }\n\n  //CHANGE IMAGE FILES\n  changeFile = (e) => {\n    console.log(e)\n    if(e.size <= 10485760){\n    this.setState({imageFile: e,\n    message: \"\"})\n  }else{\n    this.setState({message: \"File size is too big!\"})\n  }\n  }\n\n\n\n\n  //START OF SIGN UP\n  makeNewUser = (e) => {\n    e.preventDefault();\n    if(this.state.imageFile.length !== 0){\n               //UPLOAD TO CLOUDINARY\n               const uploadData = new FormData();\n               uploadData.append(\"imageUrl\", this.state.imageFile);\n       \n               service.handleUpload(uploadData)\n               .then(response => {\n                   console.log('response is: ', response);\n                   // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n                   this.setState({ imagePost: response.imageUrl }, () => {\n                    //CALL TO THE SIGNUP ROUTE\n                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\n                    .then(theData => {\n                        console.log(\"NEW USER!\")\n                        console.log(theData)\n                        this.setState({finished: true,\n                          username: \"\",\n                            email: \"\",\n                            password: \"\",\n                            imageUrl: \"\",\n                            imageFile: [],\n                     })\n\n                    })\n                    .catch(err => console.log(err));\n\n\n                  })\n                  \n             }).catch(err => {\n              console.log(\"Error while uploading the file: \", err);\n            })   \n                }else{\n                   \n                   //CALL TO THE SIGNUP ROUTE\n                   axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\n                   .then(theData => {\n                       console.log(\"NEW USER!\")\n                       console.log(theData)\n                       this.setState({finished: true,\n                        username: \"\",\n                          email: \"\",\n                          password: \"\",\n                          imageUrl: \"\",\n                          imageFile: [],\n                   })\n                  })\n                   .catch(err => console.log(err));\n            \n                }\n\n                // this.setState({\n                //   username: \"\",\n                //   email: \"\",\n                //   password: \"\",\n                //   imageUrl: \"\",\n                //   imageFile: [],\n                // })\n\n         \n}\n// END OF SIGN UP\n\n//LOGIN USER\nloginUser = (e) => {\ne.preventDefault();\naxios.post('http://localhost:5000/auth/login', this.state, {withCredentials: true})\n.then(responseFromServer => {\n    console.log(responseFromServer.data.userDoc)\n    const { userDoc } = responseFromServer.data;\n    this.syncCurrentUser(userDoc);\n    this.setState({\n      username: \"\",\n      password: \"\"\n    })\n  \n    alert(\"You are logged in.\")\n    setTimeout(() => {this.get_notifications(userDoc._id) }, 500)\n    // return <Redirect to='/profile'/>\n})\n.catch(err => {\n    console.log(err)\n    // if(err.response.data) return this.setState({message: err.response.data.message})\n})\n}\n// END OF LOGIN\n\n\n// LOG OUT USER\nlogoutUser = () => {\naxios.delete('http://localhost:5000/auth/logout', {withCredentials: true})\n.then(theUser => {\n  console.log(\"DISCONNECTED!\")\n  console.log(theUser)\n  this.syncCurrentUser(null)\n  this.setState({currentUser: null})\n})\n}\n//END OF LOG OUT USER\n\n//LIKE POST\nhandleLike = (e) => {\n  axios.post(`http://localhost:5000/updateLikes/${e}`, this.state.currentUser, {withCredentials: true})\n  .then(responseFromBack => {\n    console.log(responseFromBack)\n  //  console.log(responseFromBack.data.thePost)\n    const newPost = responseFromBack.data.thePost\n    const clone = [...this.state.images]\n    const theIndex = clone.findIndex(postToFind => postToFind._id === newPost._id)\n   console.log(clone[theIndex]);\n    clone[theIndex].likes = newPost.likes\nthis.setState({images: clone}, () => {\n  console.log(this.state.images)\n})\n  })\n  .catch(err => console.log(err));\n}\n//END OF LIKE POST\n\n\n\n//DELETING POSTS\nhandleDelete = (thePostId) => {\nconsole.log(thePostId)\nconst postArray = [...this.state.images]\nconst theIndex = postArray.findIndex(postToFind => postToFind._id === thePostId)\nconsole.log(theIndex)\n postArray.splice(theIndex, 1)\n this.setState({\n   images: postArray,\n   showConfirm: false\n })\n\n axios.post(`http://localhost:5000/delete/${thePostId}`)\n .then(responseFromBackend => console.log(responseFromBackend))\n .catch(err => console.log(err))\n}\n\nconfirmDelete = e => {\n  this.setState({\n    showConfirm: true\n  })\n}\n\ncancelDelete = e => {\n  this.setState({\n    showConfirm: false\n  })\n}\n// END OF DELETING POSTS\n\n//EDIT POSTS\neditPost = (e, theValue) => {\n  e.preventDefault();\n  const postList = [...this.state.images]\n  const theIndex = postList.findIndex(thePost => thePost._id === theValue)\n let postToEdit = postList[theIndex]\n postToEdit.modal = !postList[theIndex].modal\n this.setState({\n   images: postList\n })\n}\n\nupdatePost = (e, thePost) => {\n  e.preventDefault();\nconst {caption, tags} = this.state\nconsole.log(caption)\nconst imageList = [...this.state.images];\nconst theIndex = imageList.indexOf(thePost)\nlet captionToUse = '';\nlet tagToUse = []\ntagToUse = tags\ncaptionToUse = caption\n\nif(captionToUse.length === 0){\n  console.log(\"THERE IS NOTHING!\")\n  captionToUse = imageList[theIndex].caption\n}if(tagToUse.length === 0){\n  tagToUse = imageList[theIndex].tags \n}else{\nimageList[theIndex].caption = caption\nimageList[theIndex].tags = [tags]\n}\n\nconsole.log(tagToUse)\nconsole.log(captionToUse)\nimageList[theIndex].modal = !imageList[theIndex].modal\n\nthis.setState({images: imageList}, () => \naxios.put(`http://localhost:5000/updatePost/${thePost._id}`, {caption: captionToUse, tags: tagToUse})\n.then(theValues => {\n  this.setState({\n    caption: '',\n    tags: []\n  })\n  window.location = `/post/${thePost._id}`\n// const NewCaption = theValues.data.caption\n// const NewTags = theValues.data.tags\n// imageList[theIndex].caption = NewCaption\n// imageList[theIndex].tags = NewTags\n}).catch(err => console.log(\"A problem happened getting the values!\"))\n)\n}\n\n//END OF EDIT POST\n\n//EDIT USER BIO/PICTURE\nshowEditUser = () => {\n  this.setState({\n    showEdit: !this.state.showEdit\n  }, () => {\n    console.log(this.state.showEdit)\n  }) \n}\n\nupdateUser = (e, theUser) => {\n  e.preventDefault();\n  const { bio, imageFile, currentUser} = this.state\n  console.log(this.state.bio)\n  console.log(this.state.imageFile)\n  if(this.state.imageFile.length !== 0){\n\n    //UPLOAD TO CLOUDINARY\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", this.state.imageFile);\n\n    service.handleUpload(uploadData)\n    .then(response => {\n        console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n        this.setState({ imagePost: response.imageUrl }, () => {\n         //CALL TO THE SIGNUP ROUTE\n         axios.put(`http://localhost:5000/auth/updateUser/${currentUser._id}`, { bio, imageFile: this.state.imagePost, currentUser}, {withCredentials: true})\n         .then(theData => {\n             console.log(\"PROFILE UPDATED!\")\n             console.log(theData.data)\n             const listUsers = [...this.state.users]\n             const {bio, imageUrl} = theData.data\n             const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\n             listUsers[theIndex].bio = bio\n             listUsers[theIndex].imageUrl = imageUrl\n\n             this.setState({\n              users: listUsers,\n                imageUrl: \"\",\n                imageFile: [],\n                showEdit: !this.state.showEdit\n         })\n\n         window.location = `/profile/${currentUser._id}`\n         })\n         .catch(err => console.log(err));\n\n\n       })\n       \n  }).catch(err => {\n   console.log(\"Error while uploading the file: \", err);\n })   \n     }else{\n      axios.put(`http://localhost:5000/auth/updateUser/${currentUser._id}`, { bio, imageFile, currentUser}, {withCredentials: true})\n      .then(theData => {\n          console.log(\"PROFILE UPDATED!\")\n          console.log(theData.data)\n          const listUsers = [...this.state.users]\n          const {bio} = theData.data\n          const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\n          listUsers[theIndex].bio = bio\n          \n          this.setState({\n            users: listUsers,\n              imageUrl: \"\",\n              imageFile: [],\n              showEdit: !this.state.showEdit\n       })\n       window.location.reload(); \n      })\n      .catch(err => console.log(err));\n\n     }\n\n}\n\n//END OF EDIT USER BIO/PICTURE\n\n\n//FOLLOWING FUNCTIONALITY\nhandleFollow = userToFollow => {\nconsole.log(userToFollow)\nconst { currentUser } = this.state\n\naxios.post(`http://localhost:5000/follow/${userToFollow}`, currentUser)\n.then(responseFromBackend => {\n  console.log(responseFromBackend.data)\n  console.log(currentUser._id)\n  const userList = [...this.state.users]\n  const users = responseFromBackend.data.theUsers\n  const user1 = users[users.findIndex(theUser => theUser._id === currentUser._id)]\n  const user2 = users[users.findIndex(theUser => theUser._id === userToFollow)]\nconsole.log(user1)\nconsole.log(user2)\n  const theIndex1 = userList.findIndex(userToFind => userToFind._id === user1._id)\n  console.log(theIndex1)\n  const theIndex2 = userList.findIndex(userToFind => userToFind._id === user2._id)\n  console.log(theIndex2)\n  userList[theIndex1].followers = user1.followers\n  userList[theIndex1].following = user1.following\n  userList[theIndex2].followers = user2.followers\n  userList[theIndex2].following = user2.following\n  console.log(\"NEW USER LIST\")\n  console.log(userList)\n  this.setState({users: userList})\n})\n\n}\n//END OF FOLLOWING FUNCTIONALITY\n\n// ADD COMMENTS\nhandleComment = (e, postId) => {\n  e.preventDefault();\n  console.log(this.state.comment)\n  console.log(postId)\n  const newComment = {\n    owner: this.state.currentUser,\n    message: this.state.comment\n  }\n  const clone = [...this.state.images]\n  console.log(clone.findIndex(thePost => thePost._id === postId))\n  const theIndex = clone.findIndex(thePost => thePost._id === postId)\nif(theIndex >= 0){\n  clone[theIndex].comments.push({user: this.state.currentUser._id, comment: this.state.comment})\n}\n\nthis.setState({\n  images: clone,\n  comment: ''\n})\n\n  axios.put(`http://localhost:5000/addComment/${postId}`, newComment)\n  .then(responseFromBackend => console.log(responseFromBackend))\n  \n  .catch(err => console.log(err))\n\n}\n\n//END OF ADD COMMENTS\n\n\n\n  render() {\n    // console.log(\"LIST OF ALL POSTS\")\n    // console.log(this.state.images)\n    return (\n      <div className=\"App\">\n       \n        <NavBar currentUser={this.state.currentUser} logoutUser={this.logoutUser} lastUrl={this.state.lastUrl} queryInput={this.state.queryInput} onChangeValue={this.updateForm}/>\n          \n        <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/world\" render={(props) => <WorldPost {...props} allPosts={this.state.images} renderPosts={this.worldRender} handleLike={this.handleLike} currentUser={this.state.currentUser} query={this.state.queryInput}/>}/>\n        <Route exact path=\"/theImg\" render={(props) => <SinglePost {...props} myUrl={this.state.images} />}/>\n        <Route exact path=\"/home\" render={(props) => (<HomeFeed {...props} allPosts={this.state.images} currentUser={this.state.currentUser} handleLike={this.handleLike} />) }/>\n        <Route exact path=\"/newPost\" render={(props) => <PostForm {...props} handleSubmit={this.postNewExp} changeFile={this.changeFile} changeUrl={this.changeImgUrl} onChangeValue={this.updateForm} formValues={this.state}/>}/>\n        <Route exact path=\"/signup\" render={(props) => <Signup {...props} onChangeValue={this.updateForm} changeFile={this.changeFile} handleSubmit={this.makeNewUser} currentUser = {this.state.currentUser} onUserChange = { userDoc => this.syncCurrentUser(userDoc)} formValues={this.state}/>}></Route>\n        <Route exact path=\"/login\" render={(props) => <Login {...props} onChangeValue={this.updateForm}  handleSubmit={this.loginUser} currentUser = {this.state.currentUser} formValues={this.state} />}></Route>\n        <Route exact path=\"/post/:id\" render={(props) => <SinglePost {...props} postValues={this.state.images} handleLike={this.handleLike} currentUser={this.state.currentUser} onChangeValue={this.updateForm} comment={this.state.comment} handleComment={this.handleComment}/>}></Route>\n        <Route exact path='/followers/:id' render={(props) => <FollowerList {...props} allUsers={this.state.users}/>}/>\n        <Route exact path='/following/:id' render={(props) => <FollowingList {...props} allUsers={this.state.users}/>}/>\n        <Route exact path=\"/profile/:id\" render={(props) => \n          this.state.currentUser ? \n          (<UserProfile {...props} \n            images = {this.state.images} \n            currentUser = {this.state.currentUser} \n            users={this.state.users}\n            showEdit={this.state.showEdit}\n            confirmDelete={this.confirmDelete}\n            onLogout={this.logoutUser}\n            onDelete={this.handleDelete}\n            cancelDelete={this.cancelDelete}\n            showConfirm={this.state.showConfirm}\n            handleFollow={this.handleFollow}\n            handleEdit={this.editPost}\n            onChangeValue={this.updateForm}\n            handleEditProfile={this.showEditUser}\n            changeFile={this.changeFile}\n            updateUser={this.updateUser}\n            updatePost={this.updatePost}\n            />) : \n          (<Redirect to=\"/login\"/>)}/>\n        \n        </Switch>\n        \n        \n      </div>\n    );\n  }\n}\n//<Route exact path=\"/\">{this.state.images && this.renderImages()}</Route>\n\nexport default App;\n\n\n\n//OLD CODE \n // renderImages = () => {\n  //   const {images} = this.state.images\n  //   return images.map(image => {\n  //     return (\n  //       <div>\n  //       <div>\n  //       <ThreeMap \n  //         key={image._id}\n  //         {...image}\n  //         url={image.imageUrl}\n  //       />\n  //       </div>\n  //       <div>HELLO MY NAME IS JESUS </div>\n  //       </div>\n  //     )\n  //   })\n  // };\n\n  //SINGLE POST\n// getData = async() => { \n//   // return this.props.myUrl\n//   try {\n//       await axios.get(`http://localhost:5000${this.props.match.url}`).then(response => {\n//         this.setState({\n//           images: response.data\n//         });\n//       });\n//     } catch (err) {\n//       console.log(err);\n//     }\n// }\n\n//END SINGLE POST\n\n //OLD WAY OF MAKE A NEW POST\n  // post_new_experience = async e => {\n  //   try{\n  //   e.preventDefault();\n  //   const { postImgUrl } = this.state;\n  //   const clone = [...this.state.images];\n  //   await axios.post(postImgUrl, this.state.selectedFile)\n  //   .then(response => {\n  //     clone.push(response.data);\n  //     this.setState({\n  //       images: clone\n  //     });\n  //   });\n  // }catch(err){\n  //   console.log(err)\n  // }  \n  // };\n\n  // END OF MAKE A NEW POST","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}