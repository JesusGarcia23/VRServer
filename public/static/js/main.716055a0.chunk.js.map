{"version":3,"sources":["Components/ThreeMap.js","Components/Likebtn.js","Components/CommentSection.js","Components/Editpost.js","Components/SinglePost.js","Components/PostForm.js","Components/user-pages/Signup.js","Components/user-pages/Login.js","Components/EditUser.js","Components/UserProfile.js","Components/Home.js","Components/FollowerList.js","Components/FollowingList.js","Components/HomeFeed.js","Components/WorldPost.js","Components/NavBar.js","api/service.js","App.js","serviceWorker.js","index.js"],"names":["ThreeMap","getData","a","url","props","this","then","initThree","camera","scene","renderer","console","log","container","document","getElementById","width","clientWidth","height","clientHeight","THREE","position","z","target","orbitControls","Orbitcontrols","autoRotate","enableZoom","ambi","add","spotLight","set","intensity","load","texture","geometry","Math","pi","scale","material","map","mesh","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","init","animate","requestAnimationFrame","render","style","id","Component","Likebtn","className","onClick","onLike","postId","theIcon","CommentSection","allComments","allPostComments","length","eachComment","textDecoration","to","user","_id","src","imageUrl","borderRadius","alt","username","comment","currentUser","type","placeholder","name","value","onChange","e","updateComment","handleComment","theImageId","Edit","image","exitEdit","class","onSubmit","submitUpdate","caption","handleUpdate","tags","exitFullscreen","theCanvas","getElementsByTagName","addEventListener","SinglePost","match","params","thePost","postValues","filter","eachItem","Fragment","modal","Editpost","handleEdit","onChangeValue","updatePost","goBack","history","owner","marginLeft","marginRight","thePostId","userId","thePostOwner","confirmDelete","checkOwner","preventDefault","ele","myDiv","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","theArray","myId","findIndex","theId","handleLike","isLiked","likes","createdAt","Date","toDateString","eachTag","fontSize","key","updateQuery","comments","showConfirm","warning","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","confirmBtnCssClass","title","onConfirm","onDelete","onCancel","cancelDelete","PostForm","state","imageFile","redirect","canvasStyle","alignText","canvasContainer","createButton","formStyle","justifyContent","uploadPost","seePreview","files","size","newImg","URL","createObjectURL","changeFile","changeUrl","setState","changePreview","myInput","setAttribute","removePicture","myFileList","removeAttribute","setTimeout","formValues","postMade","message","handleSubmit","htmlFor","React","img","Signup","finished","email","password","Login","EditUser","bio","UserProfile","images","users","showEdit","theUserId","profileId","userFollowers","pics","userDetails","theUser","handleEditProfile","updateUser","followers","indexOf","handleFollow","color","following","pic","Home","FollowerList","allUsers","followerList","eachUser","FollowingList","followingList","HomeFeed","feedList","userList","allPosts","eachPost","sortedList","sort","b","WorldPost","arrayOfPosts","query","theQuery","toLowerCase","join","includes","NavBar","Navbar","bg","variant","expand","Toggle","aria-controls","Collapse","Nav","notifications","NavDropdown","eachNotification","Item","href","imageTo","fromWho","event","Divider","onLogout","service","axios","create","baseURL","errorHandler","err","handleUpload","theFile","post","res","data","catch","saveNewThing","newThing","App","imagePost","postImgUrl","appUrl","herokUrl","lastUrl","profileImgDefault","selectedFile","singlePost","queryInput","file_upload_change","formData","FormData","append","postNewExp","uploadData","response","withCredentials","theNewPost","newPost","clone","push","get_data_torender","get","get_notifications","notificationList","updateForm","currentTarget","changeImgUrl","makeNewUser","theData","loginUser","responseFromServer","userDoc","syncCurrentUser","alert","undefined","logoutUser","delete","location","responseFromBack","theIndex","postToFind","handleDelete","postArray","splice","responseFromBackend","editPost","theValue","postList","finalArray","imageList","captionToUse","tagToUse","split","put","theValues","showEditUser","listUsers","reload","userToFollow","user1","user2","theIndex1","userToFind","theIndex2","newComment","updateQueryBar","theTag","actualUrl","exact","path","renderPosts","worldRender","myUrl","onUserChange","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.716055a0.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Orbitcontrols from \"three-orbitcontrols\";\r\n\r\n\r\nclass ThreeMap extends Component {\r\n  // state = {\r\n  //   picture: \"\"\r\n  // };\r\n\r\n  async componentDidMount() {\r\n\tawait this.getData()\r\n\t.then(()=>{\r\n       this.initThree()\r\n\t})\r\n  }\r\n\r\n  // GETS DATA FROM STATE\r\n  getData = async () => {\r\n    const {url} = this.props\r\n    if(url){\r\n    // await axios.get(\"http://localhost:5000/api/upload\").then(response => {\r\n    //   this.setState({\r\n    //     picture: response.data\r\n    //   });\r\n    //  });\r\n    }\r\n    return url\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  initThree() {\r\n    const {url} = this.props\r\n    console.log(\"MY URL\");\r\n    console.log(url);\r\n   // let stats;\r\n    let camera, scene, renderer;\r\n   // let group;\r\n    let container = document.getElementById(\"WebGL-output\");\r\n    let width = container.clientWidth,\r\n      height = container.clientHeight;\r\n\r\n   \r\n    init();\r\n    \r\n\r\n    animate();\r\n\r\n    function init() {\r\n      scene = new THREE.Scene();\r\n      // group = new THREE.Group();\r\n      // scene.add( group );\r\n\r\n      camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);\r\n      // camera.position.x = -10;\r\n      // camera.position.y = 15;\r\n      camera.position.z = 1;\r\n      camera.target = new THREE.Vector3(0, 0, 0);\r\n      // camera.lookAt( scene.position );\r\n\r\n      //TO CONTROL THE IMAGE MOVEMENT\r\n      let orbitControls = new /*THREE.OrbitControls*/ Orbitcontrols(camera, container);\r\n      orbitControls.autoRotate = false;\r\n      orbitControls.enableZoom = false;\r\n      // let clock = new THREE.Clock();\r\n      //THE AMBIENT LIGHT\r\n      let ambi = new THREE.AmbientLight(0x686868);\r\n      scene.add(ambi);\r\n\r\n      let spotLight = new THREE.DirectionalLight(0xffffff);\r\n      spotLight.position.set(550, 100, 550);\r\n      spotLight.intensity = 0.6;\r\n\r\n      scene.add(spotLight);\r\n      // Texture\r\n      let loader = new THREE.TextureLoader();\r\n      \r\n   \r\n      loader.load(url, function(texture) {\r\n        // let geometry = new THREE.SphereGeometry( 200, 20, 20 );\r\n        let geometry = new THREE.SphereGeometry(500, 60, Math.pi * 2);\r\n        geometry.scale(-1, 1, 1);\r\n        let material = new THREE.MeshBasicMaterial({ map: texture });\r\n        let mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n      });\r\n    \r\n      renderer = new THREE.WebGLRenderer();\r\n      renderer.setClearColor(0xffffff);\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(width, height);\r\n      container.appendChild(renderer.domElement);\r\n      // stats = new Stats();\r\n      // container.appendChild( stats.dom );  //Increase status information\r\n    }\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      render();\r\n      // stats.update();\r\n    }\r\n    function render() {\r\n      renderer.render(scene, camera); \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n    \r\n    <div>  \r\n\r\n      {/* <h4>\r\n      <Link href=\"/details\">Details</Link>\r\n      </h4> */}\r\n\r\n        <div\r\n          style={{\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n          }}\r\n          id=\"WebGL-output\"\r\n         \r\n        />\r\n         \r\n        \r\n\r\n        </div>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreeMap;\r\n","import React from 'react';\r\n\r\nconst Likebtn = (props) => {\r\n    return (\r\n        <button className=\"likeBtn\" onClick={() => props.onLike(props.postId)}><i className={props.theIcon}></i></button>\r\n    )\r\n}\r\n\r\nexport default Likebtn\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CommentSection = (props) => {\r\n    // console.log(\"LIST COMMENT\")\r\n    // console.log(props.allPostComments)\r\n    \r\n    const commentList = (allComments) => {\r\n        console.log(allComments)\r\n        if(allComments.length !== 0){\r\n        return (\r\n          <div className=\"CommentsContainer\">\r\n          {allComments.map(eachComment => {\r\n            return (\r\n              <div className='single-comment'>\r\n              <Link style={{textDecoration: 'none'}} to={`/profile/${eachComment.user._id}`}>\r\n              <span className='userCommentName'><img src={`${eachComment.user.imageUrl}`} style={{width:\"30px\", height:\"30px\", borderRadius:50, 'margin-left':'20px'}} alt='commentPicUser' ></img> {eachComment.user.username} </span>\r\n              </Link>\r\n              <span className='the-comment'>{eachComment.comment}</span>\r\n              </div>\r\n              )\r\n          })}\r\n          </div>\r\n        )\r\n    }else{\r\n        return (<div>THERE ARE NOT COMMENTS YET</div>)\r\n    }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n        {props.allPostComments && commentList(props.allPostComments)}\r\n        {props.currentUser && \r\n            <div>\r\n            <input type='text' placeholder=\"Write a comment....\" name='comment' className='commentInput' value={props.comment} onChange={e => {props.updateComment(e)}}></input>\r\n        <button onClick={e => {props.handleComment(e, props.postId)}}>Post</button>\r\n            </div> }\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentSection","import React from 'react'\r\n\r\nlet theImageId = ''\r\nconst Edit = (props) => {\r\n    const { image } = props\r\n    if(image){\r\n        theImageId = image._id \r\n    }\r\n    console.log(theImageId)\r\nreturn (\r\n    <div className='editUserFormContainer'>\r\n    <div className='editPostHeader'>\r\n    <h2>Update your Post</h2>\r\n    <button onClick={e => {props.exitEdit(e, theImageId)}} className='exitBtnEditUser'><i class=\"fas fa-times\"></i></button>\r\n    </div>\r\n            <form onSubmit={e => props.submitUpdate(e, image)} >\r\n               <h3>Caption</h3>\r\n                <textarea type=\"text\" name=\"caption\" placeholder={image.caption} className='captionFormPost' value={props.caption} onChange={e => props.handleUpdate(e)} />\r\n                <h2>Tags</h2>\r\n                <input type=\"text\" name=\"tags\" placeholder={image.tags} className='tagsFormPost' value={props.tags} onChange={e => props.handleUpdate(e)} />\r\n             \r\n                <button className=\"btn btn-sm btn-success\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Edit","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport Likebtn from './/Likebtn';\r\nimport CommentSection from './CommentSection';\r\nimport { Link } from 'react-router-dom';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Editpost from './Editpost'\r\n\r\nlet height = \"50vh\"\r\nlet width = \"100vw\"\r\nvar requestFullscreen = function (ele) {\r\n\tif (ele.requestFullscreen) {\r\n\t\tele.requestFullscreen();\r\n\t} else if (ele.webkitRequestFullscreen) {\r\n\t\tele.webkitRequestFullscreen();\r\n\t} else if (ele.mozRequestFullScreen) {\r\n\t\tele.mozRequestFullScreen();\r\n\t} else if (ele.msRequestFullscreen) {\r\n\t\tele.msRequestFullscreen();\r\n\t} else {\r\n\t\tconsole.log('Fullscreen API is not supported.');\r\n\t}\r\n};\r\n\r\n\r\nvar exitFullscreen = function () {\r\n       let theCanvas = document.getElementsByTagName('canvas')[0];\r\n          console.log(theCanvas);\r\n          if(theCanvas.style.height === \"100vh\"){\r\n            theCanvas.style.height = \"50vh\"\r\n          }else{\r\n            theCanvas.style.height =\"100vh\"\r\n          }\r\n};\r\n\r\nwindow.addEventListener('fullscreenchange', exitFullscreen);\r\nwindow.addEventListener('webkitfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('mozfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('MSFullscreenChange', exitFullscreen);\r\n\r\nconst SinglePost = props => {\r\n\r\n    \r\n        function goBack(){\r\n          const  { goBack } = props.history\r\n          goBack();\r\n         }\r\n\r\n        function isLiked(value, theArray, postId){\r\n          if(value){\r\n             const myId = value._id;\r\n            //  console.log(theArray)\r\n            //  console.log(theArray.findIndex(theId => theId._id === myId))\r\n             if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n               return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIcon\"/>)\r\n             }else{\r\n                return( <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIcon\"/>)\r\n             }\r\n          }\r\n       }\r\n\r\n        const fullScreen = (e) => {\r\n          e.preventDefault();\r\n          let myDiv = document.getElementById('WebGL-output');\r\n         requestFullscreen(myDiv)\r\n        }\r\n\r\n        //GET THE POST CREATION DATE\r\n        const postTime = (e) => {\r\n          return new Date(e).toDateString()\r\n        }\r\n\r\n        //CHECK USER WITH THE POST\r\n        const checkOwner = (thePost, user) => {\r\n          let thePostId = ''\r\n          let userId = ''\r\n          let thePostOwner = ''\r\n          if(user)\r\n          userId = user._id;\r\n          if(thePost){\r\n            thePostId = thePost._id\r\n            thePostOwner = thePost.owner._id\r\n          }\r\n          if(userId === thePostOwner){\r\n            return <div className='editOrDeletePost'><i className=\"fas fa-edit editIcon\" onClick={ e => {props.handleEdit(e, thePostId)}}></i> <i className=\"fas fa-trash-alt deleteIcon\" onClick={e => props.confirmDelete()}></i></div>\r\n          }\r\n        }\r\n\r\n      //   console.log(\"PROPS!\")\r\n      // console.log(props)\r\n      const id = props.match.params.id\r\n\r\n      const theArr = props.postValues.filter(eachItem => {\r\n        return eachItem._id === id\r\n      })\r\n\r\n      const thePost = theArr[0];\r\n\r\n        if(thePost){\r\n            return(\r\n              <React.Fragment>\r\n                <div className=\"singlePost\">\r\n                {thePost.modal && \r\n                  <div className='editUserProfileContainer'>\r\n                  <Editpost exitEdit={props.handleEdit} image={thePost} handleUpdate={props.onChangeValue} submitUpdate={props.updatePost}></Editpost>\r\n                  </div>}\r\n                <div className=\"singlePostHeader\">\r\n                <button className='goBack-btn' onClick={goBack}><i class=\"fas fa-arrow-left\"></i></button>\r\n                <img src={thePost.owner.imageUrl}  style={{width:\"65px\", height:\"65px\", borderRadius:50, marginLeft:30, marginRight:30}} alt=\"miniProfilePic\"></img>\r\n            <Link style={{textDecoration: 'none'}} to={`/profile/${thePost.owner._id}`}>{thePost.owner.username}</Link>\r\n                {checkOwner(thePost, props.currentUser)}\r\n                </div>\r\n                <div>\r\n                <ThreeMap url={thePost.image} height={height} width={width}/>\r\n                </div>\r\n                <button onClick={fullScreen} className='expandBtn'><i class=\"fas fa-expand-arrows-alt expandIcon\"></i><div className='expandText'>Expand</div></button>\r\n                <div className=\"singleFooter\">\r\n\r\n                <div className=\"singleLikes\">\r\n\r\n                <div className='like-counter'>\r\n                {isLiked(props.currentUser, thePost.likes, thePost._id)}\r\n                <span className='likeCount'>{thePost.likes.length} Likes</span>\r\n               </div>\r\n\r\n               <div className='post-date'>\r\n               {postTime(thePost.createdAt)}\r\n               </div>\r\n                </div>\r\n\r\n                <div className='postCaption'>\r\n                {thePost.caption}\r\n                <div className='tagName'>\r\n                {thePost.tags.map(eachTag => {\r\n                    return <Link to='/world' style={{fontSize:20}} key={eachTag} onClick={e => props.updateQuery(eachTag)}>#{eachTag} </Link>\r\n                  }\r\n                    )}\r\n                </div>\r\n                </div>\r\n\r\n                <div>\r\n                {<CommentSection currentUser={props.currentUser} comment={props.comment} allPostComments={thePost.comments} updateComment={props.onChangeValue} handleComment={props.handleComment} postId={thePost._id}/>}\r\n                </div>\r\n\r\n                </div>\r\n            \r\n                {props.showConfirm === true &&\r\n                  <SweetAlert\r\n                      warning\r\n                      showCancel\r\n                      confirmBtnText=\"Confirm!\"\r\n                      confirmBtnBsStyle=\"danger\"\r\n                      cancelBtnBsStyle=\"default\"\r\n                      confirmBtnCssClass=\"confirmDelete\"\r\n                      title=\"Are you sure?\"\r\n                      onConfirm={e => props.onDelete(thePost._id)}\r\n                      onCancel={e => props.cancelDelete()}\r\n                  >\r\n                      Do you want to delete this post?\r\n             </SweetAlert>\r\n              }\r\n\r\n\r\n                </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <div>OH NO!</div>\r\n        )\r\n      \r\n   \r\n\r\n}\r\n\r\nexport default SinglePost;\r\n\r\n// {thePost.tags.map(eachTag => {\r\n//   return <Link to='/world' style={{fontSize:20}} key={eachTag} onClick={e => props.updateQuery(eachTag)}>#{eachTag} </Link>\r\n// }\r\n//   )}","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass PostForm extends React.Component{\r\n\r\n    \r\n     state = {\r\n    imageUrl: \"\",\r\n    imageFile: [],\r\n    redirect: false,\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {\r\n            this.setState({redirect: true})}, 2000)\r\n    }\r\n\r\n    //STYLING \r\n    canvasStyle = {\r\n        height: \"200px\",\r\n        width: \"600px\"\r\n    }\r\n\r\n    height = \"350px\"\r\n    width = \"62vw\"\r\n\r\n    style = {\r\n        \"display\": \"block\",\r\n        \"margin-top\": \"100px\",\r\n        \"margin-left\": \"auto\",\r\n        marginRight: \"auto\",\r\n        \"max-width\": \"600px\",\r\n        \"height\": \"300px\",\r\n        alignText: \"center\",\r\n        \"border\": \"1px solid black\"\r\n    }\r\n\r\n    canvasContainer = {\r\n        \"display\": \"block\",\r\n        \"border\": \"1px solid gray\", \r\n        \"margin\": \"20px 6vw\",\r\n        height: \"350px\",\r\n        width: \"62vw\"\r\n    }\r\n\r\n    createButton = {\r\n        \"display\": \"block\",\r\n        \"margin\": \"auto\"\r\n\r\n    }\r\n\r\n    formStyle = {\r\n        justifyContent: \"center\",\r\n        alignText: \"center\"\r\n    }\r\n\r\n// END OF STYLING\r\n\r\n    uploadPost = (e) => {\r\ne.preventDefault();\r\nconsole.log(e.target);\r\n    }\r\n\r\n    seePreview = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(e.target.files);\r\n        if(e.target.files[0] && e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        this.props.changeFile(e.target.files[0])\r\n        this.props.changeUrl(newImg)\r\n    \r\n        this.setState({\r\n            imageUrl: newImg,\r\n            imageFile: e.target.files[0]})\r\n\r\n        this.changePreview(newImg)\r\n        \r\n        let myInput = document.getElementById('myFileList')\r\n        myInput.setAttribute('disabled', true);\r\n        myInput.className = \"inputDisabled\"\r\n    }else{\r\n        this.props.changeFile(e.target.files[0])\r\n    }\r\n    }\r\n\r\n    changePreview = (value) => {\r\n    \r\n        return (\r\n            <div style={this.canvasStyle}>\r\n            {this.state.imageUrl && <ThreeMap url={value} height={this.height} width={this.width}/>}\r\n            </div>\r\n        )\r\n   \r\n    }\r\n\r\n    // changeText = (e) =>{\r\n    //     this.setState({\r\n    //         [e.currentTarget.name]: e.currentTarget.value\r\n    //     })\r\n    // }\r\n\r\n    removePicture = (e) => {\r\n       e.preventDefault();\r\n        let myFileList = document.getElementById('myFileList');\r\n        myFileList.removeAttribute('disabled');\r\n        myFileList.value = null\r\n        myFileList.className = \"inputfile\"\r\n        this.setState({imageUrl: \"\",\r\n        imageFile: []\r\n    })\r\n    }\r\n\r\n    render(){\r\n        const {caption, tags, currentUser, postMade} = this.props.formValues\r\n        if(currentUser && !postMade){\r\n        return(\r\n            <div className=\"formPost\">\r\n            <h1>New Experience</h1>\r\n            {this.props.formValues.message}\r\n            <form style={this.formStyle} onSubmit={this.props.handleSubmit}>\r\n            \r\n            <div className='canvasAndFileContainer'>\r\n            <span style={this.canvasContainer} id=\"myCanvasContainer\">\r\n            {this.changePreview(this.state.imageUrl)}\r\n            </span>\r\n            <span className='fileHandlePostForm'>\r\n\r\n            <div className='chooseFileBtnContainer'>\r\n            <input type=\"file\" onChange={this.seePreview} id=\"myFileList\" className=\"inputfile\"></input>\r\n            <label htmlFor=\"myFileList\">Choose a file <span>|</span><i class=\"fas fa-upload uploadIcon\"></i></label>\r\n            </div>\r\n          \r\n            <div className='fileSizeText'>(File size max 10 Mb)</div>\r\n\r\n            <div className='removeBtnContainer'>\r\n            <button onClick={this.removePicture} className=\"removeBtn\">REMOVE <span>|</span><i class=\"fas fa-redo\"></i></button>\r\n            </div>\r\n\r\n            </span>\r\n            </div>\r\n            \r\n           \r\n           <div className='mainPostFormContainer'>\r\n           <span className='captionContainerPostForm'>\r\n           <textarea className='captionPostForm' type=\"text\" value={caption} onChange={ e => this.props.onChangeValue(e)} name=\"caption\" placeholder=\"write a caption...\"></textarea>\r\n           </span>\r\n           <span className=\"tagTitleAndTextarea\">\r\n           <span className=\"tagsTitle\">Tags: </span>\r\n           <textarea className='tagsPostForm' type=\"text\" value={tags} onChange={ e => this.props.onChangeValue(e)} name=\"tags\" placeholder=\"e.g: #Beach #Sun #Ocean\"></textarea>\r\n           </span>\r\n           </div>\r\n\r\n            <button className='createNewPost' style={this.createButton}>CREATE NEW EXPERIENCE</button>\r\n            </form>\r\n\r\n            <div>\r\n          \r\n            </div>\r\n            </div>\r\n        )\r\n    }else if(currentUser && postMade){\r\n       return( <Redirect to='/world'/> )\r\n    }else if(this.state.redirect){\r\n        return( <Redirect to='/login'/> )\r\n    }else{\r\n        return (<div>LOADING...</div>)\r\n    }\r\n    }\r\n\r\n}\r\n//<img src={this.state.imageUrl} alt=\"Choose a file\" height=\"300px\" width=\"500px\"></img>\r\nexport default PostForm;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n// import the service file since we need it to send (and get) the data to(from) server\r\n\r\nlet img = \"\"\r\n\r\nclass Signup extends React.Component{\r\n\r\n \r\n     finished = false;\r\n\r\n\r\n    seePreview = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.files[0]);\r\n        if(e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        img = newImg;\r\n        this.props.changeFile(e.target.files[0])\r\n    }\r\n        // this.setState({imageFile: e.target.files[0]})\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        const {username, email, password} = this.props.formValues\r\n        if(this.finished || this.props.currentUser){\r\n            return (\r\n                <Redirect to={`/profile/${this.props.currentUser._id}`}/>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"SignupForm\">\r\n            <section>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={this.props.handleSubmit}>\r\n            <label>Username: </label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Email: </label>\r\n            <input type=\"email\" name=\"email\" value={email} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Password </label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={ e => this.props.onChangeValue(e)}></input>\r\n            <label>Image </label>\r\n            <input type=\"file\" onChange={this.seePreview} name=\"imageFile\"></input>\r\n            <img src={img} alt=\"Choose a file\"></img>\r\n            <button>Submit</button>\r\n            </form>\r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Signup;\r\n\r\n   // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         username: \"\",\r\n    //         email: \"\",\r\n    //         password: \"\",\r\n    //         imageUrl: \"\",\r\n    //         imageFile: [],\r\n    //         finished: false\r\n    //     }\r\n    // }\r\n\r\n    \r\n    // updateValueField = (e) => {\r\n    //     console.log(e.target)\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // makeNewUser = (e) => {\r\n    //     e.preventDefault();\r\n    //     if(this.state.imageFile.length > 0){\r\n    //                //UPLOAD TO CLOUDINARY\r\n    //                const uploadData = new FormData();\r\n    //                uploadData.append(\"imageUrl\", this.state.imageFile);\r\n           \r\n    //                service.handleUpload(uploadData)\r\n    //                .then(response => {\r\n    //                    // console.log('response is: ', response);\r\n    //                    // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n    //                    this.setState({ imageUrl: response.secure_url });\r\n\r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n               \r\n               \r\n    //                  })\r\n    //                  .catch(err => {\r\n    //                    console.log(\"Error while uploading the file: \", err);\r\n    //                  });\r\n    //                 }else{\r\n                       \r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n                \r\n    //                 }\r\n\r\n             \r\n    // }","import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nclass Login extends React.Component {\r\n\r\n    message = null\r\n\r\n    render(){\r\n        const { username, password, currentUser } = this.props.formValues\r\n        if(currentUser){\r\n            return (\r\n                <Redirect to={`/home`}/>\r\n            )\r\n        }else{\r\n        return(\r\n            <div>\r\n            <section>\r\n\r\n            <h2> Login </h2>\r\n\r\n            <form onSubmit ={this.props.handleSubmit} >\r\n\r\n                <label> Username: </label>\r\n                 <input value={username} onChange={ e => this.props.onChangeValue(e)} type=\"text\" name=\"username\" placeholder=\"username\" />\r\n\r\n\r\n\r\n                <label> Password</label>\r\n                <input value={password} onChange={ e => this.props.onChangeValue(e)} type=\"password\" name=\"password\" placeholder=\"***********\"/>\r\n                 <button> Login </button>\r\n\r\n            </form>\r\n\r\n            {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\r\n\r\n            { this.message && <div> { this.message } </div> }\r\n\r\n        </section>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         username: \"\",\r\n    //         password: \"\",\r\n    //         message: null\r\n    //     }\r\n    // }\r\n\r\n    // genericSync(event){\r\n    //     const {name, value} = event.target;\r\n    //     this.setState({[name]: value})\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     event.preventDefault();\r\n\r\n    //     Axios.post('http://localhost:5000/auth/login', this.state, {withCredentials: true})\r\n    //     .then(responseFromServer => {\r\n    //         console.log(responseFromServer.data.userDoc)\r\n    //         const { userDoc } = responseFromServer.data;\r\n    //         this.props.onUserChange(userDoc);\r\n          \r\n    //         alert(\"You are logged in.\")\r\n    //         // return <Redirect to='/profile'/>\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err)\r\n    //         // if(err.response.data) return this.setState({message: err.response.data.message})\r\n    //     })\r\n    // }","import React from 'react';\r\n\r\nlet img = ''\r\n\r\nconst EditUser = (props) => {\r\n    const { currentUser } = props\r\n    \r\n    function changePicture(e){\r\n        if(img === ''){\r\n           return <img src={currentUser.imageUrl} alt=\"Choose a file\" className='editUserPicture'></img>\r\n        }else{\r\n            return <img src={img} alt=\"Choose a file\" className='editUserPicture'></img>\r\n        }\r\n \r\n    }\r\n\r\n    function seePreview(e){\r\n        e.preventDefault();\r\n        console.log(e.target.files[0]);\r\n        if(e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        img = newImg;\r\n        props.changeFile(e.target.files[0])\r\n    }\r\n        // this.setState({imageFile: e.target.files[0]})\r\n\r\n    }\r\n\r\n    return(\r\n        <div className='editUserFormContainer'>\r\n        <div className='editUserHeader'>\r\n        <h2>Update your Profile</h2>\r\n        <button onClick={e => {props.exitEdit(e)}} className='exitBtnEditUser'><i class=\"fas fa-times\"></i></button>\r\n        </div>\r\n        <form onSubmit={ e => props.submitUpdate(e, currentUser)}>\r\n        {changePicture()}\r\n       \r\n        <input type='file' onChange={seePreview} className='chooseFileUserEdit'></input>\r\n        \r\n        <textarea type=\"text\" name=\"bio\" placeholder={currentUser.bio} onChange={e => props.handleUpdate(e)} className='editUserCaption' />\r\n        <button>Update profile</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport EditUser from './EditUser'\r\n\r\n\r\nconst UserProfile = (props) => {\r\n    const { images, currentUser, users, showEdit } = props\r\n    const theUserId = currentUser._id\r\n    const profileId = props.match.params.id\r\n\r\n    function goBack(){\r\n        const  { goBack } = props.history\r\n        goBack();\r\n       }\r\n\r\n    function haveLogout(userFollowers){\r\n        if(theUserId === profileId){\r\n            return   <div className=\"buttons\" >\r\n            <button onClick={props.handleEditProfile} className='editUserProfileIcon'><i class=\"fas fa-user-edit\"></i></button>\r\n        </div>\r\n        }else{\r\n            if(userFollowers.indexOf(theUserId) >= 0){\r\nreturn (<button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(profileId)}><i className=\"fa fa-user-minus\"> Unfollow </i></button>)\r\n        }else{\r\n            return (<button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(profileId)}><i className=\"fa fa-user-plus\"> Follow </i></button> )\r\n        }\r\n    }\r\n    }\r\n\r\n    function havePermission(thePostId){\r\n        if(theUserId === profileId){\r\n        return (\r\n        <React.Fragment>\r\n        <div className='editOrDeletePost'><i class=\"fas fa-edit editIcon\" onClick={ e => {props.handleEdit(e, thePostId)}}></i> <i class=\"fas fa-trash-alt deleteIcon\" onClick={e => props.confirmDelete()}></i></div>\r\n    </React.Fragment>)\r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n\r\n    const pics = images.filter(image => image.owner._id === profileId)\r\n\r\n    const userDetails = users.filter(theUser => theUser._id === profileId)[0]\r\n    if (userDetails) {\r\n        return (\r\n            <div className='profileContainer'>\r\n            {showEdit && <div className='editUserProfileContainer'>\r\n            <EditUser exitEdit={props.handleEditProfile} handleUpdate={props.onChangeValue} currentUser={currentUser} submitUpdate={props.updateUser} changeFile={props.changeFile}/>\r\n            </div>}\r\n               \r\n            {(theUserId !== profileId) ? <button onClick={goBack}>Go back</button> : ''}\r\n                <div className=\"user-profile\">\r\n                   <span className=\"user-profile-img\">{currentUser && <img src={userDetails.imageUrl} style={{ borderRadius: 70, width: \"150px\", height: \"150px\"}} alt=\"profile-img\" />}\r\n                   {haveLogout(userDetails.followers)}\r\n                   </span> \r\n                  \r\n                   <div>\r\n                   <div className='user-profile-username'>{userDetails.username}</div>\r\n                    <div className='user-profile-bio'>{userDetails.bio}</div>\r\n                    </div>\r\n\r\n                    <div className='userPostAndFollowers'>\r\n                    <div className='userPostCounter'>\r\n                    Posts: {pics.length}\r\n                    </div>\r\n                    <div className='userFollowersContainer'>\r\n                    <div>\r\n                    <Link to={`/followers/${profileId}`} style={{textDecoration: 'none', color: 'black'}}><span className=\"followUser\">Followers: {userDetails.followers.length}</span></Link> \r\n                    </div>\r\n                    <div>\r\n                  <Link to={`/following/${profileId}`} style={{textDecoration: 'none', color: 'black'}}> <span className=\"followUser\">Following: {userDetails.following.length}</span></Link> \r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n\r\n                 </div>\r\n                    <div className=\"profilePostContainer\" >\r\n                        {pics && pics.map(pic => {\r\n                            return (\r\n                            <div className=\"profilePost\" key={pic._id} >\r\n                                <div className=\"profileImgContainer\">\r\n                                    <img className=\"profileImg\" src={pic.image} alt=\"worldPic\" width=\"100%\" height=\"300px\" />\r\n                                     <div className=\"profileOverlayContainer\" >\r\n                                        <div className=\"textOverlayProfile\" id={pic._id}>\r\n                                        {havePermission(pic._id)}\r\n\r\n                                        <Link to={`/post/${pic._id}`} style={{ textDecoration: 'none', color:'white'}}>See the full Post</Link>\r\n                                       </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }       \r\n                        </div>\r\n                {!pics.length && <p>You dont have any posts </p>}\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div>LOADING...</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"HomePage\">\r\n            <div className=\"HomeItem HomeItem1\"></div>\r\n            <div className=\"HomeItem HomeItem2\"></div>\r\n            <div className=\"HomeItem HomeItem3\"></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FollowerList = props => {\r\nconst allUsers = props.allUsers\r\nconst theId = props.match.params.id\r\nconst followerList = allUsers.filter(eachUser => {return eachUser.following.indexOf(theId) >= 0})\r\nconsole.log(props)\r\n\r\nfunction goBack(){\r\n    const  { goBack } = props.history\r\n    goBack();\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <button onClick={goBack}>Go back</button>\r\n        <div>FOLLOWERS</div>\r\n        {followerList.map(eachUser => {\r\n            return <div key={eachUser.username}>\r\n                <div>\r\n                <img src={eachUser.imageUrl} style={{ borderRadius: 70, width: \"80px\", height: \"80px\"}} alt=\"profile-img\" />\r\n                </div>\r\n                <Link to={`/profile/${eachUser._id}`}>{eachUser.username}</Link>\r\n                </div>\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FollowerList","import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\nconst FollowingList = props => {\r\n    const allUsers = props.allUsers\r\n    const theId = props.match.params.id\r\n    const followingList = allUsers.filter(eachUser => {return eachUser.followers.indexOf(theId) >= 0})\r\n\r\n   function goBack(){\r\n    const  { goBack } = props.history\r\n    goBack();\r\n   }\r\n\r\n\r\n        return (\r\n            <div>\r\n            <button onClick={goBack}>Go back</button>\r\n            <div>FOLLOWING LIST</div>\r\n            {followingList.map(eachUser => {\r\n                return <div key={eachUser.username}>\r\n                    <div>\r\n                    <img src={eachUser.imageUrl} style={{ borderRadius: 70, width: \"80px\", height: \"80px\"}} alt=\"profile-img\" />\r\n                    </div>\r\n                    <Link style={{textDecoration: 'none'}} to={`/profile/${eachUser._id}`}>{eachUser.username}</Link>\r\n                    </div>\r\n            })}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FollowingList","import React from 'react';\r\nimport Likebtn from './Likebtn'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeFeed = props => {\r\n    let feedList = []\r\n    let userList = []\r\nconst {currentUser, allPosts} = props\r\nif(currentUser){\r\n     userList = currentUser.following\r\n    if(allPosts.length){\r\n        feedList = allPosts.filter(eachPost => { return userList.indexOf(eachPost.owner._id) >= 0 || eachPost.owner._id === currentUser._id })\r\n    }\r\n}\r\n\r\nfunction isLiked(value, theArray, postId){\r\n    if(value){\r\n       const myId = value._id;\r\n       if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n         return( \r\n             <div className='likeContainerHome'> \r\n             <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIconHome\"/> \r\n             <span>{theArray.length} Likes</span>\r\n             </div>\r\n            )\r\n       }else{\r\n          return(\r\n              <div className='likeContainerHome'>\r\n            <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIconHome\"/>\r\n            <span>{theArray.length} Likes</span>\r\n            </div>)\r\n       }\r\n    }\r\n }\r\n\r\n  //GET THE POST CREATION DATE\r\n  const postTime = (e) => {\r\n    return new Date(e).toDateString()\r\n  }\r\n\r\n //SORT ALL THE IMAGES FROM THE RECENT TO THE OLDEST ONE\r\nconst sortedList = feedList.sort((a, b) => {\r\n    return new Date(b.createdAt) - new Date(a.createdAt)\r\n})\r\n\r\n    if(currentUser !== null){\r\n        return(\r\n            <div>\r\n\r\n            <div>\r\n            {feedList.length > 0 ? sortedList.map(eachPost => {\r\n                return <div className=\"col-s-12 feedPost\" key={eachPost._id} >\r\n            <div className='homePostHeader'>\r\n            <img src={eachPost.owner.imageUrl} style={{width:\"50px\", height:\"50px\", borderRadius:50}} alt=\"miniProfilePic\"></img>\r\n            \r\n           <Link style={{textDecoration: 'none', fontSize:20, marginLeft:15}} to={`/profile/${eachPost.owner._id}`}> {eachPost.owner.username}</Link>\r\n            </div>\r\n\r\n            <div className=\"homeImgContainer\">\r\n            <img  className=\"worldImg\" src={eachPost.image}  alt=\"worldPic\" width=\"100%\" height=\"300px\"></img>\r\n\r\n            <div className=\"overlayContainer\" >\r\n\r\n            <div className=\"textOverlay\" id={eachPost._id}>\r\n            {isLiked(props.currentUser, eachPost.likes, eachPost._id)}\r\n            <div className='commentlength-container'>{eachPost.comments.length} Comments</div>\r\n            <Link style={{textDecoration: 'none', color:'white'}} to={`/post/${eachPost._id}`}> \r\n            <div className='fullPostText'>See the full Post</div>\r\n            </Link>\r\n            </div>\r\n            \r\n            </div>\r\n           \r\n            </div>\r\n            <div className='homePostFoot'>\r\n            \r\n            <p>{eachPost.caption}</p>\r\n            <p>{postTime(eachPost.createdAt)}</p>\r\n            </div>\r\n            </div>\r\n            }): <div>START FOLLOWING PEOPLE <Link to='/world'>(SEE WORLD) </Link>OR UPLOAD YOUR OWN EXPERIENCES!</div>}\r\n            </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return  <div>LOADING...</div>\r\n    }\r\n\r\n}\r\n\r\nexport default HomeFeed","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Likebtn from './Likebtn';\r\n\r\nconst WorldPost = props => {\r\n\r\n   console.log(props)\r\n   let arrayOfPosts = []\r\n\r\n   function isLiked(value, theArray, postId){\r\n      if(value){\r\n         const myId = value._id;\r\n         if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n           return( \r\n              <div className='likeContainerWorld'>\r\n            <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIconWorld\"/>\r\n            <span>{theArray.length} Likes</span>\r\n            </div>)\r\n         }else{\r\n            return(\r\n               <div className='likeContainerWorld'>\r\n               <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIconWorld\"/>\r\n               <span>{theArray.length} Likes</span>\r\n               </div>)\r\n         }\r\n      }\r\n   }\r\nlet {query, currentUser} = props\r\n// console.log(props.allPosts)\r\n\r\n\r\nif(query !== ''){\r\n   let theQuery = query.toLowerCase();\r\nlet queryList = props.allPosts.filter(eachPost => { return  eachPost.tags.join('').toLowerCase().includes(theQuery)})\r\narrayOfPosts = queryList\r\n}else{\r\n   arrayOfPosts = props.allPosts\r\n   }\r\n\r\n\r\nif(currentUser && arrayOfPosts.length > 0){\r\n     return(\r\n    \r\n         <div>\r\n         <input type=\"text\" placeholder=\"Search\" onChange={ e => {props.onChangeValue(e)}} name='queryInput' className=\"mr-sm-2\" />\r\n         <h1>Explore the World</h1>\r\n         <div className=\"worldContainer\">\r\n         {arrayOfPosts && arrayOfPosts.map(image => {\r\n            return <div className=\"worldPost\" key={image._id} >\r\n            <div className=\"worldImgContainer\">\r\n            <img  className=\"worldImg\" src={image.image}  alt=\"worldPic\" width=\"100%\" height=\"300px\"/>\r\n            \r\n            \r\n            <div className=\"overlayContainer\" >\r\n            <div className=\"textOverlayWorld\" id={image._id}>\r\n            <div className='worldUserOverlay'>\r\n            <img src={image.owner.imageUrl} style={{width:\"70px\", height:\"70px\", borderRadius:50, marginRight:'1vw'}} alt=\"miniProfilePic\"/>\r\n            <Link to={`/profile/${image.owner._id}`} style={{textDecoration: 'none', color:'white', fontSize:20}}> {image.owner.username}</Link> \r\n            <div className='overlayTextWorld'>\r\n            {isLiked(props.currentUser, image.likes, image._id)} \r\n            <div className='Worldcommentlength-container'>{image.comments.length} Comments</div>\r\n            </div>\r\n            <Link to={`/post/${image._id}`} style={{textDecoration: 'none', color:'white'}}><div className='fullPostText'> See the full Post</div></Link>\r\n           </div>\r\n            </div> \r\n            </div>\r\n         \r\n            </div>\r\n            </div>\r\n           \r\n         })}\r\n         \r\n         </div>\r\n         </div>\r\n     )\r\n   }else if(currentUser && arrayOfPosts.length === 0 && query ){\r\n      return (\r\n         <div>\r\n         <input type=\"text\" placeholder=\"Search\" onChange={ e => {props.onChangeValue(e)}} name='queryInput' className=\"mr-sm-2\" />\r\n         <h1>Explore the World</h1>\r\n         <div>OH NO! THERE ARE NO POSTS!</div>\r\n         </div>\r\n      )\r\n   }else{\r\n      return (\r\n         <div>PLEASE LOG IN</div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default WorldPost;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\n\r\n\r\nconst NavBar = (props) =>{\r\n\r\n  function displayNotifications(notifications){\r\n    console.log(\"WORKING\")\r\n    console.log(notifications)\r\n    if(notifications.length){\r\n      notifications.sort((a,b) => {\r\nif(a.createdAt < b.createdAt){\r\n  return 1;\r\n}else if(a.createdAt > b.createdAt){\r\n  return -1\r\n}else{\r\n  return 0\r\n}\r\n      })\r\n\r\nif(notifications.length > 0){\r\nreturn(\r\n      <NavDropdown title=\"Notifications\" id=\"basic-nav-dropdown\">\r\n      {notifications && notifications.map(eachNotification => {\r\n        if(eachNotification.type === \"Like\" || eachNotification.type === \"Comment\" ){\r\n          return (\r\n            <React.Fragment key={eachNotification._id}>\r\n            <NavDropdown.Item href={`/post/${eachNotification.imageTo._id}`} style={{width:'19.8vw'}}>\r\n            <span className='notification-userImage'><img src={eachNotification.fromWho.imageUrl} alt='notiPicture'></img></span>\r\n            <span className='notificationText'>\r\n            <span className='notifiUser'>{eachNotification.fromWho.username}</span> {eachNotification.event}</span> \r\n           <span className='postPictureNoti'><img src={eachNotification.imageTo.image} style={{width:\"30px\", height:\"30px\", borderRadius:50}} alt='notiPostPicture'></img></span>\r\n            </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          </React.Fragment>)\r\n        }else if(eachNotification.type === \"Follow\"){\r\n          return (\r\n            <React.Fragment key={eachNotification._id}>\r\n            \r\n            <Link to={`/profile/${eachNotification.fromWho._id}`} style={{ textDecoration: 'none', color: 'black' }} className='dropdown-item'>\r\n            <span className='notification-userImage'><img src={eachNotification.fromWho.imageUrl} alt='notiPicture'></img></span> {eachNotification.fromWho.username} {eachNotification.event}\r\n            </Link>\r\n        \r\n          <NavDropdown.Divider />\r\n          </React.Fragment>\r\n          )\r\n        }else{\r\n          return;\r\n        }\r\n    \r\n      })}\r\n    </NavDropdown>\r\n    )}\r\n\r\n    }else{\r\n      return  (<NavDropdown title=\"Notifications\" id=\"basic-nav-dropdown\"></NavDropdown>)\r\n          }\r\n  }  \r\n  \r\nif(props){\r\n        return(\r\n          <React.Fragment>\r\n          <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n          <Link to=\"/home\" className='nav-link navBarBrand'>TriShare</Link>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {props.currentUser ? <Nav className=\"mr-auto\">\r\n              <Link to=\"/world\" className='nav-link'>World</Link>\r\n              <Link to=\"/newPost\" className='nav-link'>New Experience</Link>\r\n              {displayNotifications(props.notifications)}\r\n\r\n            <Link to={`/profile/${props.currentUser._id}`} className='nav-link'><i className=\"fas fa-user\" style={{marginRight:3}}></i>Profile</Link>\r\n            <NavDropdown title={<i class=\"fas fa-cog\"></i>} id=\"basic-nav-dropdown\" className='gearUserNav'>\r\n            <NavDropdown.Item onClick={props.onLogout} style={{color: 'red'}}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav> : \r\n              <Nav className=\"mr-auto\">\r\n              <Link to=\"/login\" className='nav-link'>Login</Link>\r\n              <Link to=\"/signup\" className='nav-link'>Signup</Link>\r\n              </Nav>\r\n            }\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        </React.Fragment>\r\n        )\r\n          }\r\n        }\r\n\r\nexport default NavBar;\r\n","import axios from 'axios';\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n    // withCredentials: true // => you might need this when having the users in the app \r\n  });\r\n\r\nconst errorHandler = err => {\r\n    // console.error(err);\r\n    throw err;\r\n  };\r\n  \r\n  export default {\r\n    service,\r\n  \r\n    handleUpload (theFile) {\r\n      // console.log('file in service: ', theFile)\r\n      return service.post('/upload', theFile)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    },\r\n  \r\n    saveNewThing (newThing) {\r\n      // console.log('new thing is: ', newThing)\r\n      return service.post('/things/create', newThing)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    }\r\n  }","import React, { Component } from \"react\";\nimport {Switch, Route, Redirect } from 'react-router-dom'\nimport SinglePost from './Components/SinglePost';\nimport PostForm from './Components/PostForm';\nimport Signup from './Components/user-pages/Signup'\nimport Login from './Components/user-pages/Login'\nimport UserProfile from './Components/UserProfile';\nimport Home from './Components/Home';\nimport FollowerList from './Components/FollowerList'\nimport FollowingList from './Components/FollowingList'\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport HomeFeed from './Components/HomeFeed';\nimport WorldPost from './Components/WorldPost';\nimport NavBar from \"./Components/NavBar\";\n//CLOUDINARY\nimport service from './api/service';\n\n\nclass App extends Component {\n\n    state = {\n      users: [],\n      currentUser: null,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      imageUrl: \"\",\n      bio: \"\",\n      imagePost: \"\",\n      caption: \"\",\n      tags: [],\n      imageFile: [],\n      comment: '',\n      notifications: [],\n      showConfirm: false,\n      url: \"http://localhost:5000/api/things\",\n      postImgUrl: \"http://localhost:5000/api/upload\",\n      appUrl: 'http://localhost:5000',\n      herokUrl: 'https://trishare.herokuapp.com',\n      lastUrl: '/world',\n      images: [],\n      profileImgDefault: 'https://res.cloudinary.com/thejacex/image/upload/v1572846104/emptyImage_qqqtqp.png',\n      selectedFile: null,\n      postMade: false,\n      message: \"\",\n      singlePost: null,\n      showEdit: false,\n      queryInput: ''\n    };\n  \n  async componentDidMount() {\n    await this.get_data_torender() \n\n    axios.get(`${this.state.herokUrl}/auth/loggedin`, {withCredentials: true})\n    .then(responseFromBackend => {\n      const { userDoc } = responseFromBackend.data\n      console.log(userDoc)\n      if(userDoc !== undefined){\n        setTimeout(() => {this.get_notifications(userDoc._id) }, 500)\n      }\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => console.log(\"Error while getting the user from the loggedin route \", err))\n  }\n\n  syncCurrentUser(user){\n    this.setState({ currentUser: user})\n  }\n\n  file_upload_change = e => {\n    const formData = new FormData();\n    formData.append(\"imageUrl\", e.target.files[0]);\n    if(!formData === \"\"){\n      this.setState({\n        selectedFile: formData\n      });\n    }\n  };\n\n  // MAKE A NEW POST\n  postNewExp = async(e) => {\n    e.preventDefault();\n//UPLOAD TO CLOUDINARY\nif(this.state.imageFile !== []){\nconst uploadData = new FormData();\nawait uploadData.append(\"imageUrl\", this.state.imageFile);\n\n service.handleUpload(uploadData)\n.then(response => {\n    console.log('response is: ', response);\n    // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n    this.setState({imagePost: response.imageUrl }, () => {\n\n //CALL TO THE NEW POST ROUTE\n axios.post(`${this.state.herokUrl}/createNewPost`, this.state, {withCredentials: true})\n .then(theNewPost => {\n     console.log(\"NEW POST!\")\n     console.log(theNewPost.data)\n     const newPost = theNewPost.data\n     const clone = [...this.state.images]\n     clone.push(newPost);\n     this.setState({postMade: true,\n    caption: \"\",\n  images: clone})\n\n     setTimeout(\n       this.setState({postMade: false}), 1000)\n })\n .catch(err => console.log(err));\n\n\n})\n      \n    })\n    .catch(err => {\n      console.log(\"Error while uploading the file: \", err);\n      console.log(err)\n    });\n   \n  }\n}\n\n\n  // GET ALL THE POSTS TO RENDER FROM DB\n  get_data_torender = async () => {\n    try {\n      // const {url} = this.state\n      await axios.get(`${this.state.herokUrl}/createNewPost`).then(response => {\n        console.log(response)\n        this.setState({\n          images: response.data\n        });\n      })\n    } catch (err) {\n      console.log(err);\n    }\n\n    axios.get(`${this.state.herokUrl}/users`).then(response => {\n      console.log(response)\n\n      this.setState({users: response.data})\n    })\n\n\n\n  };\n  //END OF GET ALL THE POSTS TO RENDER FROM DB\n\n  //GET ALL NOTIFICATIONS FROM DB\nget_notifications = async (userId) => {\n  try{\n\n    await axios.get(`${this.state.herokUrl}/getNotifications/${userId}`).then(response => {\n      const notificationList = response.data;\n      this.setState({\n        notifications: notificationList\n      })\n    }).catch(err => console.log(err))\n\n    \n  } catch (err){\n    console.log(err)\n  }\n}\n\n  //END OF GET ALL NOTIFICATIONS FROM DB\n\n\n  //uPDATE FORMS VALUES\n  updateForm = (e) => {\n    console.log(e)\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n \n  }\n\n  //CHANGE IMAGE URL\n  changeImgUrl = (e) => {\nthis.setState({imageUrl: e})\n  }\n\n  //CHANGE IMAGE FILES\n  changeFile = (e) => {\n    console.log(e)\n    if(e.size <= 10485760){\n    this.setState({imageFile: e,\n    message: \"\"})\n  }else{\n    this.setState({message: \"File size is too big!\"})\n  }\n  }\n//END OF UPDATE FORM VALUES\n\n\n  //START OF SIGN UP\n  makeNewUser = (e) => {\n    e.preventDefault();\n    if(this.state.imageFile.length !== 0){\n               //UPLOAD TO CLOUDINARY\n               const uploadData = new FormData();\n               uploadData.append(\"imageUrl\", this.state.imageFile);\n       \n               service.handleUpload(uploadData)\n               .then(response => {\n                   console.log('response is: ', response);\n                   // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n                   this.setState({ imagePost: response.imageUrl }, () => {\n                    //CALL TO THE SIGNUP ROUTE\n                    axios.post(`${this.state.herokUrl}/auth/signup`, this.state, {withCredentials: true})\n                    .then(theData => {\n                        console.log(\"NEW USER!\")\n                        console.log(theData)\n                        this.setState({finished: true,\n                          username: \"\",\n                            email: \"\",\n                            password: \"\",\n                            imageUrl: \"\",\n                            imageFile: [],\n                     })\n\n                    })\n                    .catch(err => console.log(err));\n\n\n                  })\n                  \n             }).catch(err => {\n              console.log(\"Error while uploading the file: \", err);\n            })   \n                }else{\n                   \n                   //CALL TO THE SIGNUP ROUTE\n                   axios.post(`${this.state.herokUrl}/auth/signup`, this.state, {withCredentials: true})\n                   .then(theData => {\n                       console.log(\"NEW USER!\")\n                       console.log(theData)\n                       this.setState({finished: true,\n                        username: \"\",\n                          email: \"\",\n                          password: \"\",\n                          imageUrl: \"\",\n                          imageFile: [],\n                   })\n                  })\n                   .catch(err => console.log(err));\n            \n                }\n\n                // this.setState({\n                //   username: \"\",\n                //   email: \"\",\n                //   password: \"\",\n                //   imageUrl: \"\",\n                //   imageFile: [],\n                // })\n\n         \n}\n// END OF SIGN UP\n\n//LOGIN USER\nloginUser = (e) => {\ne.preventDefault();\naxios.post(`${this.state.herokUrl}/auth/login`, this.state, {withCredentials: true})\n.then(responseFromServer => {\n    console.log(responseFromServer.data.userDoc)\n    const { userDoc } = responseFromServer.data;\n    this.syncCurrentUser(userDoc);\n    this.setState({\n      username: \"\",\n      password: \"\"\n    })\n  \n    alert(\"You are logged in.\")\n    if(userDoc !== undefined){\n      setTimeout(() => {this.get_notifications(userDoc._id) }, 500)\n    }\n   \n    // return <Redirect to='/profile'/>\n})\n.catch(err => {\n    console.log(err)\n    // if(err.response.data) return this.setState({message: err.response.data.message})\n})\n}\n// END OF LOGIN\n\n\n// LOG OUT USER\nlogoutUser = () => {\naxios.delete(`${this.state.herokUrl}/auth/logout`, {withCredentials: true})\n.then(theUser => {\n  console.log(\"DISCONNECTED!\")\n  console.log(theUser)\n  this.syncCurrentUser(null)\n  this.setState({currentUser: null})\n})\nwindow.location = `/`\n}\n//END OF LOG OUT USER\n\n//LIKE POST\nhandleLike = (e) => {\n  axios.post(`${this.state.herokUrl}/updateLikes/${e}`, this.state.currentUser, {withCredentials: true})\n  .then(responseFromBack => {\n    console.log(responseFromBack.data)\n  //  console.log(responseFromBack.data.thePost)\n    const newPost = responseFromBack.data\n    const clone = [...this.state.images]\n    const theIndex = clone.findIndex(postToFind => postToFind._id === newPost._id)\n   console.log(clone[theIndex]);\n    clone[theIndex].likes = newPost.likes\nthis.setState({images: clone}, () => {\n  console.log(this.state.images)\n})\n  })\n  .catch(err => console.log(err));\n}\n//END OF LIKE POST\n\n\n\n//DELETING POSTS\nhandleDelete = (thePostId) => {\nconsole.log(thePostId)\nconst postArray = [...this.state.images]\nconst theIndex = postArray.findIndex(postToFind => postToFind._id === thePostId)\nconsole.log(theIndex)\n postArray.splice(theIndex, 1)\n this.setState({\n   images: postArray,\n   showConfirm: false\n })\n\n axios.post(`${this.state.herokUrl}/delete/${thePostId}`)\n .then(responseFromBackend => console.log(responseFromBackend))\n .catch(err => console.log(err))\n\n window.location = '/home'\n}\n\nconfirmDelete = e => {\n  this.setState({\n    showConfirm: true\n  })\n}\n\ncancelDelete = e => {\n  this.setState({\n    showConfirm: false\n  })\n}\n// END OF DELETING POSTS\n\n//EDIT POSTS\neditPost = (e, theValue) => {\n  console.log(theValue)\n  // e.preventDefault();\n  const postList = [...this.state.images]\n  const theIndex = postList.findIndex(thePost => thePost._id === theValue)\n let postToEdit = postList[theIndex]\n postToEdit.modal = !postList[theIndex].modal\n this.setState({\n   images: postList\n })\n}\n\nupdatePost = (e, thePost) => {\n  e.preventDefault();\nconst {caption, tags} = this.state\nconsole.log(caption)\nconst imageList = [...this.state.images];\nconst theIndex = imageList.indexOf(thePost)\nlet captionToUse = '';\nlet tagToUse = []\nlet tagsArray = []\nlet finalArray = []\ntagToUse = tags\ncaptionToUse = caption\nconsole.log(theIndex)\nif(captionToUse.length === 0){\n  captionToUse = imageList[theIndex].caption\n}if(tagToUse.length === 0){\n  tagToUse = imageList[theIndex].tags \n}else{\n\n}\n\ntagsArray = tagToUse.split(/[.,\\/ -#]/)\nfinalArray = tagsArray.filter(eachTag =>{ return eachTag !== \"\" })\n\nimageList[theIndex].caption = captionToUse\nimageList[theIndex].tags = finalArray\nconsole.log(tagToUse)\nconsole.log(captionToUse)\nconsole.log(imageList[theIndex])\nimageList[theIndex].modal = !imageList[theIndex].modal\n\nthis.setState({images: imageList}, () => \naxios.put(`${this.state.herokUrl}/updatePost/${thePost._id}`, {caption: captionToUse, tags: tagToUse})\n.then(theValues => {\n  this.setState({\n    caption: '',\n    tags: []\n  })\n  //() => {\n  //   window.location = `/post/${thePost._id}`\n  // }\n}).catch(err => console.log(\"A problem happened getting the values!\"))\n)\n}\n\n//END OF EDIT POST\n\n//EDIT USER BIO/PICTURE\nshowEditUser = () => {\n  this.setState({\n    showEdit: !this.state.showEdit\n  }, () => {\n    console.log(this.state.showEdit)\n  }) \n}\n\nupdateUser = (e, theUser) => {\n  e.preventDefault();\n  const { bio, imageFile, currentUser} = this.state\n  console.log(this.state.bio)\n  console.log(this.state.imageFile)\n  if(this.state.imageFile.length !== 0){\n\n    //UPLOAD TO CLOUDINARY\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", this.state.imageFile);\n\n    service.handleUpload(uploadData)\n    .then(response => {\n        console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n        this.setState({ imagePost: response.imageUrl }, () => {\n         //CALL TO THE SIGNUP ROUTE\n         axios.put(`${this.state.herokUrl}/auth/updateUser/${currentUser._id}`, { bio, imageFile: this.state.imagePost, currentUser}, {withCredentials: true})\n         .then(theData => {\n             console.log(\"PROFILE UPDATED!\")\n             console.log(theData.data)\n             const listUsers = [...this.state.users]\n             const {bio, imageUrl} = theData.data\n             const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\n             listUsers[theIndex].bio = bio\n             listUsers[theIndex].imageUrl = imageUrl\n\n             this.setState({\n              users: listUsers,\n                imageUrl: \"\",\n                imageFile: [],\n                showEdit: !this.state.showEdit\n         })\n\n         window.location = `/profile/${currentUser._id}`\n         })\n         .catch(err => console.log(err));\n\n\n       })\n       \n  }).catch(err => {\n   console.log(\"Error while uploading the file: \", err);\n })   \n     }else{\n      axios.put(`${this.state.herokUrl}/auth/updateUser/${currentUser._id}`, { bio, imageFile, currentUser}, {withCredentials: true})\n      .then(theData => {\n          console.log(\"PROFILE UPDATED!\")\n          console.log(theData.data)\n          const listUsers = [...this.state.users]\n          const {bio} = theData.data\n          const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\n          listUsers[theIndex].bio = bio\n          \n          this.setState({\n            users: listUsers,\n              imageUrl: \"\",\n              imageFile: [],\n              showEdit: !this.state.showEdit\n       })\n       window.location.reload(); \n      })\n      .catch(err => console.log(err));\n\n     }\n\n}\n\n//END OF EDIT USER BIO/PICTURE\n\n\n//FOLLOWING FUNCTIONALITY\nhandleFollow = userToFollow => {\nconsole.log(userToFollow)\nconst { currentUser } = this.state\n\naxios.post(`${this.state.herokUrl}/follow/${userToFollow}`, currentUser)\n.then(responseFromBackend => {\n  console.log(responseFromBackend.data)\n  console.log(currentUser._id)\n  const userList = [...this.state.users]\n  const users = responseFromBackend.data\n  const user1 = users[users.findIndex(theUser => theUser._id === currentUser._id)]\n  const user2 = users[users.findIndex(theUser => theUser._id === userToFollow)]\nconsole.log(user1)\nconsole.log(user2)\n  const theIndex1 = userList.findIndex(userToFind => userToFind._id === user1._id)\n  console.log(theIndex1)\n  const theIndex2 = userList.findIndex(userToFind => userToFind._id === user2._id)\n  console.log(theIndex2)\n  userList[theIndex1].followers = user1.followers\n  userList[theIndex1].following = user1.following\n  userList[theIndex2].followers = user2.followers\n  userList[theIndex2].following = user2.following\n  console.log(\"NEW USER LIST\")\n  console.log(userList)\n  this.setState({users: userList})\n})\n\n}\n//END OF FOLLOWING FUNCTIONALITY\n\n// ADD COMMENTS\nhandleComment = (e, postId) => {\n  e.preventDefault();\n  console.log(this.state.comment)\n  console.log(postId)\n  const newComment = {\n    owner: this.state.currentUser,\n    message: this.state.comment\n  }\n  const clone = [...this.state.images]\n  console.log(clone.findIndex(thePost => thePost._id === postId))\n  const theIndex = clone.findIndex(thePost => thePost._id === postId)\nif(theIndex >= 0){\n  clone[theIndex].comments.push({user: {\n    _id: this.state.currentUser._id,\n    username: this.state.currentUser.username,\n    imageUrl: this.state.currentUser.imageUrl\n  }, comment: this.state.comment})\n}\n\nthis.setState({\n  images: clone,\n  comment: ''\n})\n\n  axios.put(`${this.state.herokUrl}/addComment/${postId}`, newComment)\n  .then(responseFromBackend => console.log(responseFromBackend))\n  \n  .catch(err => console.log(err))\n\n}\n\n//END OF ADD COMMENTS\n\n\n//CHANGE QUERY WITH TAGS\nupdateQueryBar = (theTag) => {\n  console.log(theTag)\n  this.setState({\n    queryInput: theTag \n  })\n}\n\n\n  render() {\n    console.log(\"LIST OF ALL NOTIFICATIONS\")\n    console.log(this.state.notifications)\n    console.log(this.state.herokUrl);\n\n    return (\n      <div className=\"App\">\n       \n        <NavBar currentUser={this.state.currentUser} notifications={this.state.notifications} logoutUser={this.logoutUser} lastUrl={this.state.lastUrl}   onLogout={this.logoutUser} actualUrl={window.location}/>\n        <Switch>\n        <Route exact path=\"/\" render={(props) => !this.state.currentUser ? <Home/> : (<Redirect to=\"/home\"/>)}/>\n        <Route path=\"/world\" render={(props) =>  <WorldPost {...props} allPosts={this.state.images} renderPosts={this.worldRender} handleLike={this.handleLike} currentUser={this.state.currentUser} query={this.state.queryInput} onChangeValue={this.updateForm} />}/>\n        <Route exact path=\"/theImg\" render={(props) => <SinglePost {...props} myUrl={this.state.images} />}/>\n        <Route exact path=\"/home\" render={(props) => (<HomeFeed {...props} allPosts={this.state.images} currentUser={this.state.currentUser} handleLike={this.handleLike} />) }/>\n        <Route exact path=\"/newPost\" render={(props) => <PostForm {...props} handleSubmit={this.postNewExp} changeFile={this.changeFile} changeUrl={this.changeImgUrl} onChangeValue={this.updateForm} formValues={this.state}/>}/>\n        <Route exact path=\"/signup\" render={(props) => <Signup {...props} onChangeValue={this.updateForm} changeFile={this.changeFile} handleSubmit={this.makeNewUser} currentUser = {this.state.currentUser} onUserChange = { userDoc => this.syncCurrentUser(userDoc)} formValues={this.state}/>}></Route>\n        <Route exact path=\"/login\" render={(props) => <Login {...props} onChangeValue={this.updateForm}  handleSubmit={this.loginUser} currentUser = {this.state.currentUser} formValues={this.state} />}></Route>\n        <Route exact path=\"/post/:id\" render={(props) => <SinglePost {...props} postValues={this.state.images} onDelete={this.handleDelete} cancelDelete={this.cancelDelete} confirmDelete={this.confirmDelete} showConfirm={this.state.showConfirm} handleLike={this.handleLike} handleEdit={this.editPost} updatePost={this.updatePost} currentUser={this.state.currentUser} onChangeValue={this.updateForm} comment={this.state.comment} handleComment={this.handleComment} updateQuery={this.updateQueryBar}/>}></Route>\n        <Route exact path='/followers/:id' render={(props) => <FollowerList {...props} allUsers={this.state.users}/>}/>\n        <Route exact path='/following/:id' render={(props) => <FollowingList {...props} allUsers={this.state.users}/>}/>\n        <Route exact path=\"/profile/:id\" render={(props) => \n          this.state.currentUser ? \n          (<UserProfile {...props} \n            images = {this.state.images} \n            currentUser = {this.state.currentUser} \n            users={this.state.users}\n            showEdit={this.state.showEdit} \n            handleFollow={this.handleFollow}\n            onChangeValue={this.updateForm}\n            handleEditProfile={this.showEditUser}\n            changeFile={this.changeFile}\n            updateUser={this.updateUser}\n            />) : \n          (<Redirect to=\"/login\"/>)}/>\n        \n        </Switch>\n        \n        \n      </div>\n    );\n  }\n}\n//<Route exact path=\"/\">{this.state.images && this.renderImages()}</Route>\n\nexport default App;\n\n\n\n//OLD CODE \n // renderImages = () => {\n  //   const {images} = this.state.images\n  //   return images.map(image => {\n  //     return (\n  //       <div>\n  //       <div>\n  //       <ThreeMap \n  //         key={image._id}\n  //         {...image}\n  //         url={image.imageUrl}\n  //       />\n  //       </div>\n  //       <div>HELLO MY NAME IS JESUS </div>\n  //       </div>\n  //     )\n  //   })\n  // };\n\n  //SINGLE POST\n// getData = async() => { \n//   // return this.props.myUrl\n//   try {\n//       await axios.get(`http://localhost:5000${this.props.match.url}`).then(response => {\n//         this.setState({\n//           images: response.data\n//         });\n//       });\n//     } catch (err) {\n//       console.log(err);\n//     }\n// }\n\n//END SINGLE POST\n\n //OLD WAY OF MAKE A NEW POST\n  // post_new_experience = async e => {\n  //   try{\n  //   e.preventDefault();\n  //   const { postImgUrl } = this.state;\n  //   const clone = [...this.state.images];\n  //   await axios.post(postImgUrl, this.state.selectedFile)\n  //   .then(response => {\n  //     clone.push(response.data);\n  //     this.setState({\n  //       images: clone\n  //     });\n  //   });\n  // }catch(err){\n  //   console.log(err)\n  // }  \n  // };\n\n  // END OF MAKE A NEW POST","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}