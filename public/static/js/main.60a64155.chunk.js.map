{"version":3,"sources":["Components/ThreeMap.js","Components/Likebtn.js","Components/CommentSection.js","Components/Editpost.js","Components/SinglePost.js","Components/Header.js","Components/PostForm.js","Components/user-pages/Signup.js","Components/user-pages/Login.js","Components/EditUser.js","Components/FollowContainer.js","Components/UserProfile.js","Components/Home.js","Components/HomeFeed.js","Components/WorldPost.js","api/service.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ThreeMap","getData","a","url","props","this","then","initThree","camera","scene","renderer","container","document","getElementById","width","clientWidth","height","clientHeight","THREE","position","z","target","orbitControls","Orbitcontrols","autoRotate","enableZoom","ambi","add","spotLight","set","intensity","load","texture","geometry","Math","pi","scale","material","map","mesh","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","init","animate","requestAnimationFrame","render","style","id","Component","Likebtn","className","onClick","onLike","postId","theIcon","CommentSection","allComments","allPostComments","length","eachComment","textDecoration","to","user","_id","src","imageUrl","borderRadius","alt","username","comment","currentUser","type","placeholder","name","value","onChange","e","updateComment","handleComment","theImageId","Edit","image","exitEdit","class","onSubmit","submitUpdate","caption","handleUpdate","tags","exitFullscreen","theCanvas","getElementsByTagName","addEventListener","socket","SinglePost","console","log","match","params","thePost","postValues","filter","eachItem","Fragment","modal","Editpost","handleEdit","onChangeValue","updatePost","goBack","history","owner","marginLeft","marginRight","thePostId","userId","thePostOwner","confirmDelete","checkOwner","preventDefault","ele","myDiv","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","theArray","myId","findIndex","theId","handleLike","isLiked","likes","createdAt","Date","toDateString","eachTag","fontSize","key","updateQuery","comments","showConfirm","warning","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","confirmBtnCssClass","title","onConfirm","onDelete","onCancel","cancelDelete","PostForm","state","imageFile","redirect","canvasStyle","alignText","canvasContainer","createButton","formStyle","justifyContent","uploadPost","seePreview","files","size","newImg","URL","createObjectURL","changeFile","changeUrl","setState","changePreview","myInput","setAttribute","removePicture","myFileList","removeAttribute","setTimeout","formValues","postMade","message","handleSubmit","htmlFor","React","img","Signup","email","password","styling","exitSignup","Login","exitLogin","EditUser","bio","FollowContainer","users","following","followers","listFollowing","listFollowers","followingClasses","followerClasses","displayFollowingUsers","theUser","eachUser","indexOf","exitContainer","myUser","handleFollow","isFollowing","showFollowers","UserProfile","images","showEdit","followContainer","theUserId","profileId","userFollowers","pics","userDetails","classes","handleShowFollow","handleEditProfile","updateUser","pic","color","Home","showLogin","classesSign","showSignup","handleSignUp","HomeFeed","feedList","userList","allPosts","eachPost","sortedList","sort","b","fontWeight","WorldPost","arrayOfPosts","query","theQuery","toLowerCase","join","includes","service","axios","create","baseURL","errorHandler","err","handleUpload","theFile","post","res","data","catch","saveNewThing","newThing","NavBar","notifications","Navbar","bg","variant","expand","Toggle","aria-controls","Collapse","Nav","notif","toWho","NavDropdown","eachNotification","imageTo","fromWho","event","Divider","Item","as","onLogout","revealLoginForm","revealSignupForm","Header","endpoint","io","App","imagePost","notifications_collection","postImgUrl","herokUrl","lastUrl","profileImgDefault","selectedFile","singlePost","queryInput","syncCurrentUser","file_upload_change","formData","FormData","append","postNewExp","uploadData","response","withCredentials","theNewPost","newPost","clone","push","get_user_data","logoutUser","delete","location","responseFromBack","theIndex","postToFind","get_data_torender","listOfPosts","get_public_notifications","notification","changingData","emit","posts","updateForm","currentTarget","changeImgUrl","makeNewUser","theData","finished","loginUser","responseFromServer","userDoc","alert","split","imageList","captionToUse","tagToUse","finalArray","put","theValues","handleDelete","postArray","splice","responseFromBackend","editPost","theValue","postList","tagsArray","showEditUser","listUsers","userToFollow","user1","user2","theIndex1","userToFind","theIndex2","newComment","showFollow","innerHTML","theChoice","showLoginForm","showSignupForm","updateQueryBar","theTag","on","get","actualUrl","exact","path","onUserChange","renderPosts","worldRender","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60a64155.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Orbitcontrols from \"three-orbitcontrols\";\r\n\r\n\r\nclass ThreeMap extends Component {\r\n  // state = {\r\n  //   picture: \"\"\r\n  // };\r\n\r\n  async componentDidMount() {\r\n\tawait this.getData()\r\n\t.then(()=>{\r\n       this.initThree()\r\n\t})\r\n  }\r\n\r\n  // GETS DATA FROM STATE\r\n  getData = async () => {\r\n    const {url} = this.props\r\n    if(url){\r\n    // await axios.get(\"http://localhost:5000/api/upload\").then(response => {\r\n    //   this.setState({\r\n    //     picture: response.data\r\n    //   });\r\n    //  });\r\n    }\r\n    return url\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  initThree() {\r\n    const {url} = this.props\r\n\r\n   // let stats;\r\n    let camera, scene, renderer;\r\n   // let group;\r\n    let container = document.getElementById(\"WebGL-output\");\r\n    let width = container.clientWidth,\r\n      height = container.clientHeight;\r\n\r\n   \r\n    init();\r\n    \r\n\r\n    animate();\r\n\r\n    function init() {\r\n      scene = new THREE.Scene();\r\n      // group = new THREE.Group();\r\n      // scene.add( group );\r\n\r\n      camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);\r\n      // camera.position.x = -10;\r\n      // camera.position.y = 15;\r\n      camera.position.z = 1;\r\n      camera.target = new THREE.Vector3(0, 0, 0);\r\n      // camera.lookAt( scene.position );\r\n\r\n      //TO CONTROL THE IMAGE MOVEMENT\r\n      let orbitControls = new /*THREE.OrbitControls*/ Orbitcontrols(camera, container);\r\n      orbitControls.autoRotate = false;\r\n      orbitControls.enableZoom = false;\r\n      // let clock = new THREE.Clock();\r\n      //THE AMBIENT LIGHT\r\n      let ambi = new THREE.AmbientLight(0x686868);\r\n      scene.add(ambi);\r\n\r\n      let spotLight = new THREE.DirectionalLight(0xffffff);\r\n      spotLight.position.set(550, 100, 550);\r\n      spotLight.intensity = 0.6;\r\n\r\n      scene.add(spotLight);\r\n      // Texture\r\n      let loader = new THREE.TextureLoader();\r\n      \r\n   \r\n      loader.load(url, function(texture) {\r\n        // let geometry = new THREE.SphereGeometry( 200, 20, 20 );\r\n        //100, 32, 32\r\n        let geometry = new THREE.SphereGeometry(500, 60, Math.pi * 2);\r\n        geometry.scale(-1, 1, 1);\r\n        let material = new THREE.MeshBasicMaterial({ map: texture });\r\n        let mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n      });\r\n    \r\n      renderer = new THREE.WebGLRenderer();\r\n      renderer.setClearColor(0xffffff);\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(width, height);\r\n      container.appendChild(renderer.domElement);\r\n      // stats = new Stats();\r\n      // container.appendChild( stats.dom );  //Increase status information\r\n    }\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      render();\r\n      // stats.update();\r\n    }\r\n    function render() {\r\n      renderer.render(scene, camera); \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n    \r\n    <div>  \r\n\r\n      {/* <h4>\r\n      <Link href=\"/details\">Details</Link>\r\n      </h4> */}\r\n\r\n        <div\r\n          style={{\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n          }}\r\n          id=\"WebGL-output\"\r\n         \r\n        />\r\n         \r\n        \r\n\r\n        </div>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreeMap;\r\n","import React from 'react';\r\n\r\nconst Likebtn = (props) => {\r\n    return (\r\n        <button className=\"likeBtn\" onClick={() => props.onLike(props.postId)}><i className={props.theIcon}></i></button>\r\n    )\r\n}\r\n\r\nexport default Likebtn\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CommentSection = (props) => {\r\n    // console.log(\"LIST COMMENT\")\r\n    // console.log(props.allPostComments)\r\n    \r\n    const commentList = (allComments) => {\r\n        if(allComments.length !== 0){\r\n        return (\r\n          <div className=\"CommentsContainer\">\r\n          {allComments.map(eachComment => {\r\n            return (\r\n              <div className='single-comment'>\r\n              <Link style={{textDecoration: 'none'}} to={`/profile/${eachComment.user._id}`}>\r\n              <span className='userCommentName'><img src={`${eachComment.user.imageUrl}`} style={{width:\"30px\", height:\"30px\", borderRadius:50, 'margin-left':'20px'}} alt='commentPicUser' ></img> {eachComment.user.username} </span>\r\n              </Link>\r\n              <span className='the-comment'>{eachComment.comment}</span>\r\n              </div>\r\n              )\r\n          })}\r\n          </div>\r\n        )\r\n    }else{\r\n        return (<div>THERE ARE NOT COMMENTS YET</div>)\r\n    }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n        {props.allPostComments && commentList(props.allPostComments)}\r\n        {props.currentUser && \r\n            <div>\r\n            <input type='text' placeholder=\"Write a comment....\" name='comment' className='commentInput' value={props.comment} onChange={e => {props.updateComment(e)}}></input>\r\n        <button onClick={e => {props.handleComment(e, props.postId)}}>Post</button>\r\n            </div> }\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentSection","import React from 'react'\r\n\r\nlet theImageId = ''\r\nconst Edit = (props) => {\r\n    const { image } = props\r\n    if(image){\r\n        theImageId = image._id \r\n    }\r\n    // console.log(theImageId)\r\nreturn (\r\n    <div className='editUserFormContainer'>\r\n    <div className='editPostHeader'>\r\n    <h2>Update your Post</h2>\r\n    <button onClick={e => {props.exitEdit(e, theImageId)}} className='exitBtnEditUser'><i class=\"fas fa-times\"></i></button>\r\n    </div>\r\n            <form onSubmit={e => props.submitUpdate(e, image)} >\r\n               <h3>Caption</h3>\r\n                <textarea type=\"text\" name=\"caption\" placeholder={image.caption} className='captionFormPost' value={props.caption} onChange={e => props.handleUpdate(e)} />\r\n                <h2>Tags</h2>\r\n                <input type=\"text\" name=\"tags\" placeholder={image.tags} className='tagsFormPost' value={props.tags} onChange={e => props.handleUpdate(e)} />\r\n             \r\n                <button className=\"btn btn-sm btn-success\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Edit","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport Likebtn from './/Likebtn';\r\nimport CommentSection from './CommentSection';\r\nimport { Link } from 'react-router-dom';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Editpost from './Editpost'\r\n\r\nlet height = \"50vh\"\r\nlet width = \"100vw\"\r\nvar requestFullscreen = function (ele) {\r\n  if (ele.requestFullscreen) {\r\n    ele.requestFullscreen();\r\n  } else if (ele.webkitRequestFullscreen) {\r\n    ele.webkitRequestFullscreen();\r\n  } else if (ele.mozRequestFullScreen) {\r\n    ele.mozRequestFullScreen();\r\n  } else if (ele.msRequestFullscreen) {\r\n    ele.msRequestFullscreen();\r\n  } else {\r\n    console.log('Fullscreen API is not supported.');\r\n  }\r\n};\r\n\r\n\r\nvar exitFullscreen = function () {\r\n  let theCanvas = document.getElementsByTagName('canvas')[0];\r\n  if (theCanvas.style.height === \"100vh\") {\r\n    theCanvas.style.height = \"50vh\"\r\n  } else {\r\n    theCanvas.style.height = \"100vh\"\r\n  }\r\n};\r\n\r\nwindow.addEventListener('fullscreenchange', exitFullscreen);\r\nwindow.addEventListener('webkitfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('mozfullscreenchange', exitFullscreen);\r\nwindow.addEventListener('MSFullscreenChange', exitFullscreen);\r\n\r\nconst SinglePost = props => {\r\n\r\n  function goBack() {\r\n    const { goBack } = props.history\r\n    goBack();\r\n  }\r\n\r\n  function isLiked(value, theArray, postId) {\r\n    if (value) {\r\n      const myId = value._id;\r\n      //  console.log(theArray)\r\n      //  console.log(theArray.findIndex(theId => theId._id === myId))\r\n      if (theArray.findIndex(theId => theId._id === myId) >= 0) {\r\n        return (<Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIcon\" />)\r\n      } else {\r\n        return (<Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIcon\" />)\r\n      }\r\n    }\r\n  }\r\n\r\n  const fullScreen = (e) => {\r\n    e.preventDefault();\r\n    let myDiv = document.getElementById('WebGL-output');\r\n    requestFullscreen(myDiv)\r\n  }\r\n\r\n  //GET THE POST CREATION DATE\r\n  const postTime = (e) => {\r\n    return new Date(e).toDateString()\r\n  }\r\n\r\n  //CHECK USER WITH THE POST\r\n  const checkOwner = (thePost, user) => {\r\n    let thePostId = ''\r\n    let userId = ''\r\n    let thePostOwner = ''\r\n    if (user)\r\n      userId = user._id;\r\n    if (thePost) {\r\n      thePostId = thePost._id\r\n      thePostOwner = thePost.owner._id\r\n    }\r\n    if (userId === thePostOwner) {\r\n      return <div className='editOrDeletePost'><i className=\"fas fa-edit editIcon\" onClick={e => { props.handleEdit(e, thePostId) }}></i> <i className=\"fas fa-trash-alt deleteIcon\" onClick={e => props.confirmDelete()}></i></div>\r\n    }\r\n  }\r\n\r\n    console.log(\"PROPS!\")\r\n  console.log(props)\r\n  const id = props.match.params.id\r\n\r\n  const theArr = props.postValues.filter(eachItem => {\r\n    return eachItem._id === id\r\n  })\r\n\r\n  const thePost = theArr[0];\r\n\r\n  if (thePost) {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"singlePost\">\r\n          {thePost.modal &&\r\n            <div className='editUserProfileContainer'>\r\n              <Editpost exitEdit={props.handleEdit} image={thePost} handleUpdate={props.onChangeValue} submitUpdate={props.updatePost}></Editpost>\r\n            </div>}\r\n          <div className=\"singlePostHeader\">\r\n            <button className='goBack-btn' onClick={goBack}><i class=\"fas fa-arrow-left\"></i></button>\r\n            <img src={thePost.owner.imageUrl} style={{ width: \"65px\", height: \"65px\", borderRadius: 50, marginLeft: 30, marginRight: 30 }} alt=\"miniProfilePic\"></img>\r\n            <Link style={{ textDecoration: 'none' }} to={`/profile/${thePost.owner._id}`}>{thePost.owner.username}</Link>\r\n            {checkOwner(thePost, props.currentUser)}\r\n          </div>\r\n          <div>\r\n            <ThreeMap url={thePost.image} height={height} width={width} />\r\n          </div>\r\n          <button onClick={fullScreen} className='expandBtn'><i class=\"fas fa-expand-arrows-alt expandIcon\"></i><div className='expandText'>Expand</div></button>\r\n          <div className=\"singleFooter\">\r\n\r\n            <div className=\"singleLikes\">\r\n\r\n              <div className='like-counter'>\r\n                {isLiked(props.currentUser, thePost.likes, thePost._id)}\r\n                <span className='likeCount'>{thePost.likes.length} Likes</span>\r\n              </div>\r\n\r\n              <div className='post-date'>\r\n                {postTime(thePost.createdAt)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='postCaption'>\r\n              {thePost.caption}\r\n              <div className='tagName'>\r\n                {thePost.tags.map(eachTag => {\r\n                  return <Link to='/world' style={{ fontSize: 20 }} key={eachTag} onClick={e => props.updateQuery(eachTag)}>#{eachTag} </Link>\r\n                }\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              {<CommentSection currentUser={props.currentUser} comment={props.comment} allPostComments={thePost.comments} updateComment={props.onChangeValue} handleComment={props.handleComment} postId={thePost._id} />}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {props.showConfirm === true &&\r\n            <SweetAlert\r\n              warning\r\n              showCancel\r\n              confirmBtnText=\"Confirm!\"\r\n              confirmBtnBsStyle=\"danger\"\r\n              cancelBtnBsStyle=\"default\"\r\n              confirmBtnCssClass=\"confirmDelete\"\r\n              title=\"Are you sure?\"\r\n              onConfirm={e => props.onDelete(thePost._id)}\r\n              onCancel={e => props.cancelDelete()}\r\n            >\r\n              Do you want to delete this post?\r\n             </SweetAlert>\r\n          }\r\n\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  return (\r\n    <div>OH NO THE POST DOES NOT EXIST!</div>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default SinglePost;\r\n\r\n// {thePost.tags.map(eachTag => {\r\n//   return <Link to='/world' style={{fontSize:20}} key={eachTag} onClick={e => props.updateQuery(eachTag)}>#{eachTag} </Link>\r\n// }\r\n//   )}","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\n\r\nvar socket\r\nclass Header extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            endpoint: `https://trishare.herokuapp.com`\r\n        }\r\n        socket = io(this.state.endpoint)\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            null\r\n        );\r\n    }\r\n}\r\n\r\nexport { Header, socket };\r\n\r\n//`https://trishare.herokuapp.com`","import React from 'react';\r\nimport ThreeMap from './ThreeMap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass PostForm extends React.Component{\r\n\r\n    \r\n     state = {\r\n    imageUrl: \"\",\r\n    imageFile: [],\r\n    redirect: false,\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {\r\n            this.setState({redirect: true})}, 2000)\r\n    }\r\n\r\n    //STYLING \r\n    canvasStyle = {\r\n        height: \"38vh\",\r\n        width: \"77vw\"\r\n    }\r\n\r\n    height = \"38vh\"\r\n    width = \"78.95vw\"\r\n\r\n    style = {\r\n        \"display\": \"block\",\r\n        \"margin-top\": \"100px\",\r\n        \"margin-left\": \"auto\",\r\n        marginRight: \"auto\",\r\n        \"max-width\": \"600px\",\r\n        \"height\": \"300px\",\r\n        alignText: \"center\",\r\n        \"border\": \"1px solid black\"\r\n    }\r\n\r\n    canvasContainer = {\r\n        \"display\": \"block\",\r\n        \"border\": \"8px solid gray\", \r\n        'border-radius': '10px',\r\n        \"margin\": \"5px auto\",\r\n        height: \"40vh\",\r\n        width: \"80vw\"\r\n    }\r\n\r\n    createButton = {\r\n        \"display\": \"block\",\r\n        \"margin\": \"auto\"\r\n\r\n    }\r\n\r\n    formStyle = {\r\n        justifyContent: \"center\",\r\n        alignText: \"center\"\r\n    }\r\n\r\n// END OF STYLING\r\n\r\n    uploadPost = (e) => {\r\ne.preventDefault();\r\n    }\r\n\r\n    seePreview = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.files[0] && e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        this.props.changeFile(e.target.files[0])\r\n        this.props.changeUrl(newImg)\r\n    \r\n        this.setState({\r\n            imageUrl: newImg,\r\n            imageFile: e.target.files[0]})\r\n\r\n        this.changePreview(newImg)\r\n        \r\n        let myInput = document.getElementById('myFileList')\r\n        myInput.setAttribute('disabled', true);\r\n        myInput.className = \"inputDisabled\"\r\n    }else{\r\n        this.props.changeFile(e.target.files[0])\r\n    }\r\n    }\r\n\r\n    changePreview = (value) => {\r\n    \r\n        return (\r\n         \r\n            <div style={this.canvasStyle}>\r\n            {this.state.imageUrl && <ThreeMap url={value} height={this.height} width={this.width}/>}\r\n            </div>\r\n        \r\n        )\r\n   \r\n    }\r\n\r\n    // changeText = (e) =>{\r\n    //     this.setState({\r\n    //         [e.currentTarget.name]: e.currentTarget.value\r\n    //     })\r\n    // }\r\n\r\n    removePicture = (e) => {\r\n       e.preventDefault();\r\n        let myFileList = document.getElementById('myFileList');\r\n        myFileList.removeAttribute('disabled');\r\n        myFileList.value = null\r\n        myFileList.className = \"inputfile\"\r\n        this.setState({imageUrl: \"\",\r\n        imageFile: []\r\n    })\r\n    }\r\n\r\n    render(){\r\n        const {caption, tags, currentUser, postMade} = this.props.formValues\r\n        if(currentUser && !postMade){\r\n        return(\r\n            <div className=\"formPost\">\r\n            <h1>New Experience</h1>\r\n            {this.props.formValues.message}\r\n            <form style={this.formStyle} onSubmit={this.props.handleSubmit}>\r\n            \r\n            <div className='canvasAndFileContainer'>\r\n            <div className='borderCanvasPost'>\r\n            <span style={this.canvasContainer} id=\"myCanvasContainer\">\r\n            {this.changePreview(this.state.imageUrl)}\r\n            </span>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className='fileHandlePostForm'>\r\n\r\n            <span className='chooseFileBtnContainer'>\r\n            <input type=\"file\" onChange={this.seePreview} id=\"myFileList\" className=\"inputfile\"></input>\r\n            <label htmlFor=\"myFileList\"> <span className='inputFileText'>Choose a file</span> <span className='inputFileText'>|</span><i class=\"fas fa-upload uploadIcon\"></i></label>\r\n            </span>\r\n          \r\n            <span className='fileSizeText'>(File size max 10 Mb)</span>\r\n\r\n            <span className='removeBtnContainer'>\r\n            <button onClick={this.removePicture} className=\"removeBtn\"> <span className='inputFileText'>REMOVE</span> <span className='inputFileText'>|</span><i class=\"fas fa-redo redoIcon\"></i></button>\r\n            </span>\r\n\r\n            </div>\r\n           \r\n           <div className='mainPostFormContainer'>\r\n           <span className='captionContainerPostForm'>\r\n           <span className=\"tagsTitle\">Caption: </span>\r\n           <textarea className='captionPostForm' type=\"text\" value={caption} onChange={ e => this.props.onChangeValue(e)} name=\"caption\" ></textarea>\r\n           </span>\r\n           <span className=\"tagTitleAndTextarea\">\r\n           <span className=\"tagsTitle\">Tags: </span>\r\n           <textarea className='tagsPostForm' type=\"text\" value={tags} onChange={ e => this.props.onChangeValue(e)} name=\"tags\" placeholder=\"e.g: #Beach #Sun #Ocean\"></textarea>\r\n           </span>\r\n           </div>\r\n\r\n            <button className='createNewPost' style={this.createButton}>CREATE NEW EXPERIENCE</button>\r\n            </form>\r\n\r\n            <div>\r\n          \r\n            </div>\r\n            </div>\r\n        )\r\n    }else if(currentUser && postMade){\r\n       return( <Redirect to='/world'/> )\r\n    }else if(this.state.redirect){\r\n        return( <Redirect to='/login'/> )\r\n    }else{\r\n        return (<div>LOADING...</div>)\r\n    }\r\n    }\r\n\r\n}\r\n//<img src={this.state.imageUrl} alt=\"Choose a file\" height=\"300px\" width=\"500px\"></img>\r\nexport default PostForm;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n// import the service file since we need it to send (and get) the data to(from) server\r\n\r\nlet img = \"\"\r\n\r\nconst Signup = (props) => {\r\n\r\n \r\n    let finished = false;\r\n\r\n\r\n  function seePreview(e) {\r\n        e.preventDefault();\r\n        console.log(e.target.files[0]);\r\n        if(e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        img = newImg;\r\n        props.changeFile(e.target.files[0])\r\n    }\r\n        // this.setState({imageFile: e.target.files[0]})\r\n\r\n    }\r\n   \r\n        console.log(props);\r\n        const {username, email, password} = props.formValues\r\n        if(finished || props.currentUser){\r\n            return (\r\n                <Redirect to={`/profile/${props.currentUser._id}`}/>\r\n            )\r\n        }\r\n        return(\r\n            <div className={props.styling}>\r\n        <div className='signupFormContainer'>\r\n        \r\n        <div className='signupContainerForm'>\r\n            <div className='signupFormHeader'>\r\n            <div className='signupTitleForm'>\r\n            <h1> Sign up </h1>\r\n            </div>\r\n            <button onClick={e => {props.exitSignup(e)}} className='exitBtnEditUser exitSignup'><i class=\"fas fa-times\"></i></button>\r\n            </div>\r\n\r\n            <form onSubmit={props.handleSubmit} className='signupFormBody'>\r\n\r\n            <div className='signupPicContainer'>\r\n            <img src={img} alt=\"Choose a file\" className='signupPic'></img>\r\n            </div>\r\n            \r\n            <div className='signupFormInput'>\r\n            <label>Username: </label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={ e => props.onChangeValue(e)}></input>\r\n            </div>\r\n\r\n            <div className='signupFormInput'>\r\n            <label>Email: </label>\r\n            <input type=\"email\" name=\"email\" value={email} onChange={ e => props.onChangeValue(e)}></input>\r\n            </div>\r\n\r\n            <div className='signupFormInput'>\r\n            <label>Password: </label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={ e => props.onChangeValue(e)}></input>\r\n            </div>\r\n\r\n            <div className='signupFormInput'>\r\n            <label>Profile Picture </label>\r\n            <input type=\"file\" onChange={seePreview} name=\"imageFile\"></input>\r\n            </div>\r\n            <button className='signupFormBtn'>Join</button>\r\n            </form>\r\n\r\n        </div>\r\n        </div>\r\n        {props.message  && <div> { props.message } </div> }\r\n        </div> \r\n\r\n        )\r\n  \r\n}\r\n\r\nexport default Signup;\r\n\r\n   // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         username: \"\",\r\n    //         email: \"\",\r\n    //         password: \"\",\r\n    //         imageUrl: \"\",\r\n    //         imageFile: [],\r\n    //         finished: false\r\n    //     }\r\n    // }\r\n\r\n    \r\n    // updateValueField = (e) => {\r\n    //     console.log(e.target)\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // makeNewUser = (e) => {\r\n    //     e.preventDefault();\r\n    //     if(this.state.imageFile.length > 0){\r\n    //                //UPLOAD TO CLOUDINARY\r\n    //                const uploadData = new FormData();\r\n    //                uploadData.append(\"imageUrl\", this.state.imageFile);\r\n           \r\n    //                service.handleUpload(uploadData)\r\n    //                .then(response => {\r\n    //                    // console.log('response is: ', response);\r\n    //                    // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n    //                    this.setState({ imageUrl: response.secure_url });\r\n\r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n               \r\n               \r\n    //                  })\r\n    //                  .catch(err => {\r\n    //                    console.log(\"Error while uploading the file: \", err);\r\n    //                  });\r\n    //                 }else{\r\n                       \r\n    //                    //CALL TO THE SIGNUP ROUTE\r\n    //                    axios.post('http://localhost:5000/auth/signup', this.state, {withCredentials: true})\r\n    //                    .then(theData => {\r\n    //                        console.log(\"NEW USER!\")\r\n    //                        console.log(theData)\r\n    //                        this.setState({finished: true})\r\n    //                    })\r\n    //                    .catch(err => console.log(err));\r\n                \r\n    //                 }\r\n\r\n             \r\n    // }","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n\r\n    const { username, password, currentUser } = props.formValues\r\n    if(currentUser){\r\n        return (\r\n            <Redirect to={`/home`}/>\r\n        )\r\n    }else{\r\n    return(\r\n        <div className={props.styling}>\r\n    <div className='loginFormContainer'>\r\n    \r\n        <div className='loginFormHeader'>\r\n        <div className='loginTitleForm'>\r\n        <h1> Login </h1>\r\n        </div>\r\n        <button onClick={e => {props.exitLogin(e)}} className='exitBtnEditUser '><i class=\"fas fa-times\"></i></button>\r\n        </div>\r\n        <form onSubmit ={props.handleSubmit} className='loginFormBody' >\r\n\r\n        <div className='loginFormInput'>\r\n        <label> Username: </label>\r\n         <input value={username} onChange={ e => props.onChangeValue(e)} type=\"text\" name=\"username\" placeholder=\"username\" />\r\n         </div>\r\n\r\n         <div className='loginFormInput'>\r\n        <label> Password: </label>\r\n        <input value={password} onChange={ e => props.onChangeValue(e)} type=\"password\" name=\"password\" placeholder=\"***********\"/>\r\n        </div>\r\n         <button className='loginFormBtn'> Login </button>\r\n\r\n    </form>\r\n\r\n    <section>\r\n    {props.message  && <div> { props.message } </div> }\r\n    </section>\r\n    </div>\r\n    </div> \r\n  \r\n    )\r\n}\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         username: \"\",\r\n    //         password: \"\",\r\n    //         message: null\r\n    //     }\r\n    // }\r\n\r\n    // genericSync(event){\r\n    //     const {name, value} = event.target;\r\n    //     this.setState({[name]: value})\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     event.preventDefault();\r\n\r\n    //     Axios.post('http://localhost:5000/auth/login', this.state, {withCredentials: true})\r\n    //     .then(responseFromServer => {\r\n    //         console.log(responseFromServer.data.userDoc)\r\n    //         const { userDoc } = responseFromServer.data;\r\n    //         this.props.onUserChange(userDoc);\r\n          \r\n    //         alert(\"You are logged in.\")\r\n    //         // return <Redirect to='/profile'/>\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err)\r\n    //         // if(err.response.data) return this.setState({message: err.response.data.message})\r\n    //     })\r\n    // }","import React from 'react';\r\n\r\nlet img = ''\r\n\r\nconst EditUser = (props) => {\r\n    const { currentUser, styling } = props\r\n    \r\n    function changePicture(e){\r\n        if(img === ''){\r\n           return <img src={currentUser.imageUrl} alt=\"Choose a file\" className='editUserPicture'></img>\r\n        }else{\r\n            return <img src={img} alt=\"Choose a file\" className='editUserPicture'></img>\r\n        }\r\n \r\n    }\r\n\r\n    function seePreview(e){\r\n        e.preventDefault();\r\n        // console.log(e.target.files[0]);\r\n        if(e.target.files[0].size <= 10485760){\r\n        let newImg = URL.createObjectURL(e.target.files[0])\r\n        img = newImg;\r\n        props.changeFile(e.target.files[0])\r\n    }\r\n        // this.setState({imageFile: e.target.files[0]})\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={styling}>\r\n        <div className='editUserHeader'>\r\n        <h2>Update your Profile</h2>\r\n        <button onClick={e => {props.exitEdit(e)}} className='exitBtnEditUser'><i class=\"fas fa-times\"></i></button>\r\n        </div>\r\n        <form onSubmit={ e => props.submitUpdate(e, currentUser)}>\r\n        {changePicture()}\r\n       \r\n        <input type='file' onChange={seePreview} className='chooseFileUserEdit'></input>\r\n        \r\n        <textarea type=\"text\" name=\"bio\" placeholder={currentUser.bio} onChange={e => props.handleUpdate(e)} className='editUserCaption' />\r\n        <button>Update profile</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst FollowContainer = (props) => {\r\n//console.log(props)\r\nconst {users, following, followers, listFollowing, listFollowers, currentUser } = props\r\nlet followingList = [];\r\n// let followerList = [];\r\n\r\nlet followingClasses = listFollowing ? 'followingContainerHeaderDark' : 'followingContainerHeader'\r\nlet followerClasses = listFollowers ? 'followerContainerHeaderDark' : 'followerContainerHeader'\r\n\r\nfunction isFollowing(myUser, eachUser){\r\nif(eachUser._id !== myUser._id){\r\n    if(myUser.following.indexOf(eachUser._id) >= 0){\r\n        return <button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(eachUser._id)}><i className=\"fa fa-user-minus followBtn\"> Unfollow </i></button>\r\n    }else{\r\n        return   <button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(eachUser._id)}><i className=\"fa fa-user-plus followBtn\"> Follow </i></button>\r\n    }\r\n   \r\n}else{\r\n    return <div></div>;\r\n}\r\n}\r\n\r\nfunction displayFollowingUsers(theArray, theUser){\r\nif(theArray.length > 0 && users.length > 0){\r\n    followingList = users.filter(eachUser => {\r\n        return theArray.indexOf(eachUser._id) >= 0\r\n    })\r\nreturn followingList.map(eachUser => {\r\n    return <div key={eachUser._id} className='userMiniFollowBox'>\r\n    <span className='followThumbImgName'>\r\n    <img src={eachUser.imageUrl} alt='thumbFollowing' className='pictureFollowList'></img>\r\n    <span onClick={e => {props.exitContainer(e)}}><Link to={`/profile/${eachUser._id}`} className='pictureFollowName' >{eachUser.username}</Link></span>\r\n    </span>\r\n    {theUser && isFollowing(theUser, eachUser)}\r\n    </div>\r\n})\r\n}else{\r\n    return <div>NO USERS!</div>\r\n}\r\n}\r\n\r\n    return (\r\n  \r\n            <div className='editUserFormContainer'>\r\n            <div className='FollowHeader'>\r\n            <span className={followerClasses} onClick={e => props.showFollowers(e, 'followers')}>Followers</span><span className={followingClasses} onClick={e => props.showFollowers(e, 'following')}><span className='followingText'>Following</span> <button onClick={e => {props.exitContainer(e)}} className='exitBtnFollow'><i class=\"fas fa-times\"></i></button> </span>        \r\n            </div>\r\n            <div className='followListContainer'>\r\n            {listFollowing && displayFollowingUsers(following, currentUser)}\r\n            {listFollowers && displayFollowingUsers(followers, currentUser)}\r\n            </div>\r\n\r\n                </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default FollowContainer","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport EditUser from './EditUser'\r\nimport FollowContainer from './FollowContainer'\r\n\r\n//{(theUserId !== profileId) ? <button className='goBackBtn' onClick={goBack}>Go back</button> : ''}\r\n\r\nconst UserProfile = (props) => {\r\n    const { images, currentUser, users, showEdit, followContainer } = props\r\n    const theUserId = currentUser._id\r\n    const profileId = props.match.params.id\r\n\r\n    // function goBack() {\r\n    //     const { goBack } = props.history\r\n    //     goBack();\r\n    // }\r\n\r\n    function haveLogout(userFollowers) {\r\n        if (theUserId === profileId) {\r\n            return <div className=\"buttons\" >\r\n                <button onClick={props.handleEditProfile} className='editUserProfileIcon'><i class=\"fas fa-user-edit\"></i></button>\r\n            </div>\r\n        } else {\r\n            if (userFollowers.indexOf(theUserId) >= 0) {\r\n                return (<button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(profileId)}><i className=\"fa fa-user-minus followBtn\"> Unfollow </i></button>)\r\n            } else {\r\n                return (<button className=\"btn btn-sm  btn-primary\" onClick={e => props.handleFollow(profileId)}><i className=\"fa fa-user-plus followBtn\"> Follow </i></button>)\r\n            }\r\n        }\r\n    }\r\n\r\n    function havePermission(thePostId) {\r\n        if (theUserId === profileId) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className='editOrDeletePost'><i class=\"fas fa-edit editIcon\" onClick={e => { props.handleEdit(e, thePostId) }}></i> <i class=\"fas fa-trash-alt deleteIcon\" onClick={e => props.confirmDelete()}></i></div>\r\n                </React.Fragment>)\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const pics = images.filter(image => image.owner._id === profileId)\r\n\r\n    // const test = users.filter(theUser => theUser._id === profileId)\r\n    // console.log(\"these are the test\", test)\r\n\r\n    const userDetails = users.filter(theUser => theUser._id === profileId)[0]\r\n\r\n    const classes = showEdit ? 'editUserFormContainer' : 'editUserFormContainer hide'\r\n    if (userDetails) {\r\n        return (\r\n            <div className='profileContainer'>\r\n\r\n                {props.handleShowFollow}\r\n                {followContainer && <div className='followUserContainer'> <FollowContainer users={users} currentUser={currentUser} handleFollow={props.handleFollow} following={userDetails.following} followers={userDetails.followers} listFollowers={props.listFollowers} listFollowing={props.listFollowing} exitContainer={e => props.handleShowFollow(e)} showFollowers={e => props.showFollowers(e)} /> </div>}\r\n                {showEdit && <div className='editUserProfileContainer'>\r\n                    <EditUser exitEdit={props.handleEditProfile} handleUpdate={props.onChangeValue} currentUser={currentUser} submitUpdate={props.updateUser} changeFile={props.changeFile} styling={classes} />\r\n                </div>}\r\n                <div className=\"user-profile\">\r\n                    <span className=\"user-profile-img\">{currentUser && <img src={userDetails.imageUrl} className='userProfileImg' alt=\"profile-img\" />}\r\n                        {haveLogout(userDetails.followers)}\r\n                    </span>\r\n\r\n                    <div className='user-profile-nameAbio'>\r\n                        <div className='user-profile-username'>{userDetails.username}</div>\r\n                        <div className='user-profile-bio'>{userDetails.bio}</div>\r\n                    </div>\r\n\r\n                    <div className='userPostAndFollowers'>\r\n                        <div className='userPostCounter'>\r\n                            <div className='userPostCounterText'>Posts: {pics.length}</div>\r\n                        </div>\r\n                        <div className='userFollowersContainer'>\r\n                            <div className='userFollowers'>\r\n                                <span className=\"followUser\"><button className='followBtnProfile' onClick={e => props.handleShowFollow(e)}>Followers:</button> {userDetails.followers.length}</span>\r\n                            </div>\r\n                            <div className='userFollowers'>\r\n                                <span className=\"followUser\"><button className='followBtnProfile' onClick={e => props.handleShowFollow(e)}>Following:</button> {userDetails.following.length}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"profilePostContainer\" >\r\n                    {pics && pics.map(pic => {\r\n                        return (\r\n                            <div className=\"profilePost\" key={pic._id} >\r\n                                <div className=\"profileImgContainer\">\r\n                                    <img className=\"profileImg\" src={pic.image} alt=\"worldPic\" width=\"100%\" height=\"300px\" />\r\n                                    <div className=\"profileOverlayContainer\" >\r\n                                        <div className=\"textOverlayProfile\" id={pic._id}>\r\n                                            {havePermission(pic._id)}\r\n\r\n                                            <Link to={`/post/${pic._id}`} style={{ textDecoration: 'none', color: 'white' }}>See the full Post</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n                {!pics.length && <p>You dont have any posts </p>}\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div>LOADING...</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport Login from './user-pages/Login'\r\nimport Signup from './user-pages/Signup'\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const {showLogin, showSignup} = props\r\n    const classes = showLogin ? 'LoginFormContainer' : 'LoginFormContainer hide'\r\n    const classesSign = showSignup ? 'SignupFormContainer' : 'SignupFormContainer hide'\r\n        return (\r\n            <div className=\"HomePage\">\r\n            {props.showLogin && \r\n                <div className='LoginFormContainer'>\r\n                <Login formValues={props.formValues} handleSubmit={props.handleSubmit} onChangeValue={props.onChangeValue} styling={classes} exitLogin={props.exitLogin}></Login></div>}\r\n\r\n            {props.showSignup && \r\n                    <div className='SignupFormContainer'>\r\n                    <Signup formValues={props.formValues} handleSubmit={props.handleSignUp} changeFile={props.changeFile} onChangeValue={props.onChangeValue} styling={classesSign} exitSignup={props.exitSignup}></Signup></div>}\r\n\r\n\r\n            <div className=\"HomeItem HomeItem1\"><div className='HomeText1'>SHARE</div></div>\r\n            <div className=\"HomeItem HomeItem2\"><div className='HomeText2'>YOUR</div></div>\r\n            <div className=\"HomeItem HomeItem3\"><div className='HomeText3'>WORLD</div></div>\r\n        </div>\r\n        )\r\n  \r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport Likebtn from './Likebtn'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeFeed = props => {\r\n    let feedList = []\r\n    let userList = []\r\nconst {currentUser, allPosts} = props\r\nif(currentUser){\r\n     userList = currentUser.following\r\n    if(allPosts.length){\r\n        feedList = allPosts.filter(eachPost => { return userList.indexOf(eachPost.owner._id) >= 0 || eachPost.owner._id === currentUser._id })\r\n    }\r\n}\r\n\r\nfunction isLiked(value, theArray, postId){\r\n    if(value){\r\n       const myId = value._id;\r\n       if(theArray.findIndex(theId => theId._id === myId) >= 0){\r\n         return( \r\n             <div className='likeContainerHome'> \r\n             <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIconHome\"/> \r\n             <span>{theArray.length} Likes</span>\r\n             </div>\r\n            )\r\n       }else{\r\n          return(\r\n              <div className='likeContainerHome'>\r\n            <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIconHome\"/>\r\n            <span>{theArray.length} Likes</span>\r\n            </div>)\r\n       }\r\n    }\r\n }\r\n\r\n  //GET THE POST CREATION DATE\r\n  const postTime = (e) => {\r\n    return new Date(e).toDateString()\r\n  }\r\n\r\n //SORT ALL THE IMAGES FROM THE RECENT TO THE OLDEST ONE\r\nconst sortedList = feedList.sort((a, b) => {\r\n    return new Date(b.createdAt) - new Date(a.createdAt)\r\n})\r\n\r\n    if(currentUser !== null){\r\n        return(\r\n            <div>\r\n\r\n            <div>\r\n            {feedList.length > 0 ? sortedList.map(eachPost => {\r\n                return <div className=\"col-s-12 feedPost\" key={eachPost._id} >\r\n            <div className='homePostHeader'>\r\n            <img src={eachPost.owner.imageUrl} style={{width:\"50px\", height:\"50px\", borderRadius:50}} alt=\"miniProfilePic\"></img>\r\n            \r\n           <Link style={{textDecoration: 'none', fontSize:22, marginLeft:15 , fontWeight:'bold', color:'black'}} to={`/profile/${eachPost.owner._id}`}> {eachPost.owner.username}</Link>\r\n            </div>\r\n\r\n            <div className=\"homeImgContainer\">\r\n            <img  className=\"worldImg\" src={eachPost.image}  alt=\"worldPic\" width=\"100%\" height=\"300px\"></img>\r\n\r\n            <div className=\"overlayContainer\" >\r\n\r\n            <div className=\"textOverlay\" id={eachPost._id}>\r\n            {isLiked(props.currentUser, eachPost.likes, eachPost._id)}\r\n            <div className='commentlength-container'>{eachPost.comments.length} Comments</div>\r\n            <Link style={{textDecoration: 'none', color:'white'}} to={`/post/${eachPost._id}`}> \r\n            <div className='fullPostText'>See the full Post</div>\r\n            </Link>\r\n            </div>\r\n            \r\n            </div>\r\n           \r\n            </div>\r\n            <div className='homePostFoot'>\r\n            \r\n            <p>{eachPost.caption}</p>\r\n            <p>{postTime(eachPost.createdAt)}</p>\r\n            </div>\r\n            </div>\r\n            }): <div className='startFollowingContainer'><div className='startFollowingWorldText'>START FOLLOWING PEOPLE\r\n            <p> <Link to='/world' className='seeWorldText'>(EXPLORE WORLD) </Link></p>OR UPLOAD YOUR OWN EXPERIENCES!</div></div>}\r\n            </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return  <div>LOADING...</div>\r\n    }\r\n\r\n}\r\n\r\nexport default HomeFeed","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Likebtn from './Likebtn';\r\n\r\nconst WorldPost = props => {\r\n\r\n   // console.log(props)\r\n   let arrayOfPosts = []\r\n\r\n   function isLiked(value, theArray, postId) {\r\n      if (value) {\r\n         const myId = value._id;\r\n         if (theArray.findIndex(theId => theId._id === myId) >= 0) {\r\n            return (\r\n               <div className='likeContainerWorld'>\r\n                  <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"fas fa-heart likeIconWorld\" />\r\n                  <span>{theArray.length} Likes</span>\r\n               </div>)\r\n         } else {\r\n            return (\r\n               <div className='likeContainerWorld'>\r\n                  <Likebtn onLike={props.handleLike} postId={postId} theIcon=\"far fa-heart likeIconWorld\" />\r\n                  <span>{theArray.length} Likes</span>\r\n               </div>)\r\n         }\r\n      }\r\n   }\r\n   let { query, currentUser } = props\r\n\r\n\r\n   if (query !== '') {\r\n      let theQuery = query.toLowerCase();\r\n      let queryList = props.allPosts.filter(eachPost => { return eachPost.tags.join('').toLowerCase().includes(theQuery) })\r\n      arrayOfPosts = queryList\r\n   } else {\r\n      arrayOfPosts = props.allPosts\r\n   }\r\n\r\n\r\n   if (currentUser && arrayOfPosts.length > 0) {\r\n      return (\r\n\r\n         <div>\r\n            <input type=\"text\" placeholder=\"Search\" onChange={e => { props.onChangeValue(e) }} name='queryInput' className=\"mr-sm-2 worldSearchInput\" />\r\n            <h1>Explore the World</h1>\r\n            <div className=\"worldContainer\">\r\n               {arrayOfPosts && arrayOfPosts.map(image => {\r\n                  return <div className=\"worldPost\" key={image._id} >\r\n                     <div className=\"worldImgContainer\">\r\n                        <img className=\"worldImg\" src={image.image} alt=\"worldPic\" width=\"100%\" height=\"300px\" />\r\n\r\n\r\n                        <div className=\"overlayContainer\" >\r\n                           <div className=\"textOverlayWorld\" id={image._id}>\r\n                              <div className='worldUserOverlay'>\r\n                                 <img src={image.owner.imageUrl} style={{ width: \"70px\", height: \"70px\", borderRadius: 50, marginRight: '1vw' }} alt=\"miniProfilePic\" />\r\n                                 <Link to={`/profile/${image.owner._id}`} style={{ textDecoration: 'none', color: 'white', fontSize: 20 }}> {image.owner.username}</Link>\r\n                                 <div className='overlayTextWorld'>\r\n                                    {isLiked(props.currentUser, image.likes, image._id)}\r\n                                    <div className='Worldcommentlength-container'>{image.comments.length} Comments</div>\r\n                                 </div>\r\n                                 <Link to={`/post/${image._id}`} style={{ textDecoration: 'none', color: 'white' }}><div className='fullPostText'> See the full Post</div></Link>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n\r\n                     </div>\r\n                  </div>\r\n\r\n               })}\r\n\r\n            </div>\r\n         </div>\r\n      )\r\n   } else if (currentUser && arrayOfPosts.length === 0 && query) {\r\n      return (\r\n         <div>\r\n            <input type=\"text\" placeholder=\"Search\" onChange={e => { props.onChangeValue(e) }} name='queryInput' className=\"mr-sm-2\" />\r\n            <h1>Explore the World</h1>\r\n            <div>OH NO! THERE ARE NO POSTS!</div>\r\n         </div>\r\n      )\r\n   } else {\r\n      return (\r\n         <div>PLEASE LOG IN</div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default WorldPost;\r\n","import axios from 'axios';\r\n\r\nconst service = axios.create({\r\n    // baseURL: `http://localhost:5000/api`,\r\n    baseURL: `https://trishare.herokuapp.com/api`,\r\n    // withCredentials: true // => you might need this when having the users in the app \r\n  });\r\n\r\nconst errorHandler = err => {\r\n    // console.error(err);\r\n    throw err;\r\n  };\r\n  \r\n  export default {\r\n    service,\r\n  \r\n    handleUpload (theFile) {\r\n      // console.log('file in service: ', theFile)\r\n      return service.post('/upload', theFile)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    },\r\n  \r\n    saveNewThing (newThing) {\r\n      // console.log('new thing is: ', newThing)\r\n      return service.post('/things/create', newThing)\r\n        .then(res => res.data)\r\n        .catch(errorHandler);\r\n    }\r\n  }\r\n\r\n  //`https://trishare.herokuapp.com/api`","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\n\r\n\r\nconst NavBar = (props) => {\r\n  const { currentUser } = props\r\n  function displayNotifications(notifications) {\r\n\r\n    if (notifications.length) {\r\n      notifications.sort((a, b) => {\r\n        if (a.createdAt < b.createdAt) {\r\n          return 1;\r\n        } else if (a.createdAt > b.createdAt) {\r\n          return -1\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n\r\n      if (notifications.length) {\r\n        return (\r\n          <NavDropdown title=\"Notifications\" id=\"dropdown-menu-align-left\">\r\n            {notifications && notifications.map(eachNotification => {\r\n              if (eachNotification.type === \"Like\" || eachNotification.type === \"Comment\") {\r\n                return (\r\n\r\n\r\n                  <React.Fragment key={eachNotification._id}>\r\n                    <Link to={`/post/${eachNotification.imageTo._id}`}>\r\n                      <span className='notification-userImage'><img src={eachNotification.fromWho.imageUrl} alt='notiPicture'></img></span>\r\n                      <span className='notificationText'><span className='notifiUser'>{eachNotification.fromWho.username}</span> <span className='notifiText'> {eachNotification.event}</span></span>\r\n                      <span className='postPictureNoti'><img src={eachNotification.imageTo.image} className='notiPostPicture' alt='notiPostPicture'></img></span>\r\n                    </Link>\r\n                    <NavDropdown.Divider />\r\n\r\n\r\n\r\n                  </React.Fragment>\r\n\r\n\r\n                )\r\n              } else if (eachNotification.type === \"Follow\") {\r\n                return (\r\n                  <React.Fragment key={eachNotification._id}>\r\n                  <NavDropdown.Item as='button'  className='notiFollow'>\r\n                    <Link to={`/profile/${eachNotification.fromWho._id}`} style={{ textDecoration: 'none', color: 'black' }}>\r\n                      <span className='notification-userImage'><img src={eachNotification.fromWho.imageUrl} alt='notiPicture'></img></span>\r\n                      <span className='notificationText'><span className='notifiUser'>{eachNotification.fromWho.username}</span><span className='notifiText'> {eachNotification.event}</span></span>\r\n                    </Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                  </React.Fragment>\r\n                )\r\n              } else {\r\n                return;\r\n              }\r\n\r\n            })}\r\n          </NavDropdown>\r\n        )\r\n      }\r\n\r\n    } else {\r\n      return (<NavDropdown title=\"Notifications\" id=\"basic-nav-dropdown\"></NavDropdown>)\r\n    }\r\n  }\r\n\r\n  if (props) {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {props.currentUser ? <Nav className=\"mr-auto\">\r\n            <Link to=\"/home\" className='nav-link navBarBrand'><img src='../../triShareLogo2.png' className='TriShareLogo' alt='logoApp'></img></Link>\r\n              <Link to=\"/world\" className='nav-link'>World</Link>\r\n              <Link to=\"/newPost\" className='nav-link'>New Experience</Link>\r\n\r\n\r\n              {displayNotifications(props.notifications.filter(notif => notif.toWho._id === currentUser._id))}\r\n\r\n\r\n              <Link to={`/profile/${props.currentUser._id}`} className='nav-link'><i className=\"fas fa-user\" style={{ marginRight: 3 }}></i>Profile</Link>\r\n              <NavDropdown title={<i className=\"fas fa-cog\"></i>} id=\"basic-nav-dropdown\" className='gearUserNav'>\r\n                <NavDropdown.Item onClick={props.onLogout} style={{ color: 'red' }}>Logout</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav> :\r\n              <Nav className=\"mr-auto\">\r\n              <Link to=\"/\" className='nav-link navBarBrand'><img src='../../triShareLogo2.png' className='TriShareLogo' alt='logoApp'></img></Link>\r\n              <Nav.Item as='button' onClick={e => props.revealLoginForm(e)} className='nav-link navBarBtn'>Login</Nav.Item>\r\n              <Nav.Item as='button' onClick={e => props.revealSignupForm(e)}  className='nav-link navBarBtn'>Signup</Nav.Item>\r\n              </Nav>\r\n            }\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport SinglePost from './Components/SinglePost';\r\nimport PostForm from './Components/PostForm';\r\nimport Signup from './Components/user-pages/Signup'\r\nimport Login from './Components/user-pages/Login'\r\nimport UserProfile from './Components/UserProfile';\r\nimport Home from './Components/Home';\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\";\r\nimport HomeFeed from './Components/HomeFeed';\r\nimport WorldPost from './Components/WorldPost';\r\n//CLOUDINARY\r\nimport service from './api/service';\r\nimport NavBar from './Components/Navbar';\r\nimport { Header } from \"./Components/Header\";\r\nimport { socket } from \"./Components/Header\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    users: [],\r\n    currentUser: null,\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    imageUrl: \"\",\r\n    bio: \"\",\r\n    imagePost: \"\",\r\n    caption: \"\",\r\n    tags: [],\r\n    imageFile: [],\r\n    comment: '',\r\n    notifications: [],\r\n    notifications_collection: [],\r\n    showConfirm: false,\r\n    url: \"http://localhost:5000/api/things\",\r\n    postImgUrl: \"http://localhost:5000/api/upload\",\r\n   // herokUrl: 'http://localhost:5000',\r\n     herokUrl: 'https://trishare.herokuapp.com',\r\n    lastUrl: '/world',\r\n    images: [],\r\n    profileImgDefault: 'https://res.cloudinary.com/thejacex/image/upload/v1572846104/emptyImage_qqqtqp.png',\r\n    selectedFile: null,\r\n    postMade: false,\r\n    message: \"\",\r\n    singlePost: null,\r\n    showSignup: false,\r\n      showLogin: false,\r\n    showEdit: false,\r\n    queryInput: '',\r\n    followContainer: false,\r\n    listFollowers: false,\r\n    listFollowing: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    socket.emit('initial_data')\r\n    socket.on('get_data', this.get_data_torender)\r\n    socket.on('get_users', this.get_user_data)\r\n    socket.on('get_notifications', this.get_public_notifications)\r\n    socket.on('change_data', this.changingData)\r\n    // socket.on('loggedin', this.syncCurrentUser)\r\n\r\n    axios.get(`${this.state.herokUrl}/auth/loggedin`, { withCredentials: true })\r\n      .then(responseFromBackend => {\r\n \r\n        // const { userDoc } = responseFromBackend.data\r\n        // console.log(userDoc)\r\n        // console.log(userDoc)\r\n        // if (userDoc !== undefined) {\r\n        //   setTimeout(() => { this.get_notifications(userDoc._id) }, 500)\r\n        // }\r\n        \r\n      })\r\n      .catch(err => console.log(\"Error while getting the user from the loggedin route \", err))\r\n  }\r\n\r\n  syncCurrentUser = (user) => {\r\n    this.setState({ currentUser: user })\r\n  }\r\n\r\n  file_upload_change = e => {\r\n    const formData = new FormData();\r\n    formData.append(\"imageUrl\", e.target.files[0]);\r\n    if (!formData === \"\") {\r\n      this.setState({\r\n        selectedFile: formData\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  postNewExp = async (e) => {\r\n    e.preventDefault();\r\n    //UPLOAD TO CLOUDINARY\r\n    if (this.state.imageFile !== []) {\r\n      const uploadData = new FormData();\r\n      await uploadData.append(\"imageUrl\", this.state.imageFile);\r\n\r\n      service.handleUpload(uploadData)\r\n        .then(response => {\r\n          console.log('response is: ', response);\r\n          // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n          this.setState({ imagePost: response.imageUrl }, () => {\r\n\r\n            //CALL TO THE NEW POST ROUTE\r\n            axios.post(`${this.state.herokUrl}/createNewPost`, this.state, { withCredentials: true })\r\n              .then(theNewPost => {\r\n                const newPost = theNewPost.data\r\n                const clone = [...this.state.images]\r\n                clone.push(newPost);\r\n                this.setState({\r\n                  postMade: true,\r\n                  caption: \"\",\r\n                  images: clone,\r\n                  imagePost: '',\r\n                  tags: [],\r\n                  imageFile: []\r\n                })\r\n\r\n                setTimeout(\r\n                  this.setState({ postMade: false }), 1000)\r\n              })\r\n              .catch(err => console.log(err));\r\n\r\n\r\n          })\r\n\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error while uploading the file: \", err);\r\n          console.log(err)\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  get_user_data = (users) => {\r\n    this.setState({\r\n      users: users\r\n    })\r\n  }\r\n\r\n  logoutUser = () => {\r\n    axios.delete(`${this.state.herokUrl}/auth/logout`, { withCredentials: true })\r\n      .then(theUser => {\r\n        this.syncCurrentUser(null)\r\n        this.setState({ currentUser: null })\r\n      })\r\n    window.location = `/`\r\n  }\r\n  //END OF LOG OUT USER\t\r\n\r\n  //LIKE POST\t\r\n  handleLike = (e) => {\r\n    axios.post(`${this.state.herokUrl}/updateLikes/${e}`, this.state.currentUser, { withCredentials: true })\r\n      .then(responseFromBack => {\r\n        //  console.log(responseFromBack.data.thePost)\t\r\n        const newPost = responseFromBack.data\r\n        const clone = [...this.state.images]\r\n        const theIndex = clone.findIndex(postToFind => postToFind._id === newPost._id)\r\n        clone[theIndex].likes = newPost.likes\r\n        this.setState({ images: clone }, () => {\r\n        })\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  get_data_torender = (listOfPosts) => {\r\n    console.log(listOfPosts)\r\n  }\r\n\r\n  get_public_notifications = (notification) => {\r\n    this.setState({\r\n      notifications_collection: notification\r\n    })\r\n  }\r\n\r\n\r\n  changingData = () => socket.emit('initial_data')\r\n\r\n\r\n  get_data_torender = (posts) => {\r\n\r\n    this.setState({\r\n      images: posts,\r\n    })\r\n  };\r\n\r\n\r\n  // get_notifications = async (userId) => {\r\n  //   try {\r\n\r\n  //     await axios.get(`${this.state.herokUrl}/getNotifications/${userId}`).then(response => {\r\n  //       const notificationList = response.data;\r\n  //       this.setState({\r\n  //         notifications: notificationList\r\n  //       })\r\n  //     }).catch(err => console.log(err))\r\n\r\n\r\n  //   } catch (err) {\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  //END OF GET ALL NOTIFICATIONS FROM DB\r\n\r\n\r\n  //uPDATE FORMS VALUES\r\n  updateForm = (e) => {\r\n   // console.log(e)\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n\r\n  }\r\n\r\n  //CHANGE IMAGE URL\r\n  changeImgUrl = (e) => {\r\n    this.setState({ imageUrl: e })\r\n  }\r\n\r\n  //CHANGE IMAGE FILES\r\n  changeFile = (e) => {\r\n    if (e.size <= 10485760) {\r\n      this.setState({\r\n        imageFile: e,\r\n        message: \"\"\r\n      })\r\n    } else {\r\n      this.setState({ message: \"File size is too big!\" })\r\n    }\r\n  }\r\n  //END OF UPDATE FORM VALUES\r\n\r\n\r\n  //START OF SIGN UP\r\n  makeNewUser = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.imageFile.length !== 0) {\r\n      //UPLOAD TO CLOUDINARY\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"imageUrl\", this.state.imageFile);\r\n\r\n      service.handleUpload(uploadData)\r\n        .then(response => {\r\n          // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n          this.setState({ imagePost: response.imageUrl }, () => {\r\n            //CALL TO THE SIGNUP ROUTE\r\n            axios.post(`${this.state.herokUrl}/auth/signup`, this.state, { withCredentials: true })\r\n              .then(theData => {\r\n                this.setState({\r\n                  finished: true,\r\n                  username: \"\",\r\n                  email: \"\",\r\n                  password: \"\",\r\n                  imageUrl: \"\",\r\n                  imageFile: [],\r\n                })\r\n\r\n              })\r\n              .catch(err => console.log(err));\r\n\r\n\r\n          })\r\n\r\n        }).catch(err => {\r\n          console.log(\"Error while uploading the file: \", err);\r\n        })\r\n    } else {\r\n\r\n      //CALL TO THE SIGNUP ROUTE\r\n      axios.post(`${this.state.herokUrl}/auth/signup`, this.state, { withCredentials: true })\r\n        .then(theData => {\r\n          this.setState({\r\n            finished: true,\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            imageUrl: \"\",\r\n            imageFile: [],\r\n          })\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n  }\r\n  // END OF SIGN UP\r\n\r\n  //LOGIN USER\r\n  loginUser = (e) => {\r\n    e.preventDefault();\r\n    axios.post(`${this.state.herokUrl}/auth/login`, this.state, { withCredentials: true })\r\n      .then(responseFromServer => {\r\n        const { userDoc } = responseFromServer.data;\r\n        this.syncCurrentUser(userDoc);\r\n        this.setState({\r\n          username: \"\",\r\n          password: \"\"\r\n        })\r\n\r\n        alert(\"You are logged in.\")\r\n\r\n        // return <Redirect to='/profile'/>\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        // if(err.response.data) return this.setState({message: err.response.data.message})\r\n      })\r\n  }\r\n  // END OF LOGIN\r\n\r\n\r\n  updatePost = (e, thePost) => {\r\n    e.preventDefault();\r\n    let { caption, tags } = this.state\r\n\r\n    if (tags.length !== 0) {\r\n      tags = tags.split(/[.,\\/ -#]/)\r\n    }\r\n\r\n    const imageList = [...this.state.images];\r\n    const theIndex = imageList.indexOf(thePost)\r\n    let captionToUse = '';\r\n    let tagToUse = []\r\n    let tagsArray = []\r\n    let finalArray = []\r\n    tagToUse = tags\r\n    captionToUse = caption\r\n    if (captionToUse.length === 0) {\r\n      captionToUse = imageList[theIndex].caption\r\n    } if (tagToUse.length === 0) {\r\n      tagToUse = imageList[theIndex].tags\r\n    } else {\r\n      tagsArray = tagToUse\r\n      finalArray = tagsArray.filter(eachTag => { return eachTag !== \"\" })\r\n\r\n      imageList[theIndex].caption = captionToUse\r\n      imageList[theIndex].tags = finalArray\r\n      imageList[theIndex].modal = !imageList[theIndex].modal\r\n\r\n      this.setState({ images: imageList }, () =>\r\n        axios.put(`${this.state.herokUrl}/updatePost/${thePost._id}`, { caption: captionToUse, tags: tagToUse })\r\n          .then(theValues => {\r\n            this.setState({\r\n              caption: '',\r\n              tags: []\r\n            })\r\n            //() => {\r\n            //   window.location = `/post/${thePost._id}`\r\n            // }\r\n          }).catch(err => console.log(\"A problem happened getting the values!\"))\r\n      )\r\n    }\r\n  }\r\n\r\n  //DELETING POSTS\r\n  handleDelete = (thePostId) => {\r\n\r\n    const postArray = [...this.state.images]\r\n    const theIndex = postArray.findIndex(postToFind => postToFind._id === thePostId)\r\n    postArray.splice(theIndex, 1)\r\n    this.setState({\r\n      images: postArray,\r\n      showConfirm: false\r\n    })\r\n\r\n    axios.post(`${this.state.herokUrl}/delete/${thePostId}`)\r\n      .then(responseFromBackend => console.log(responseFromBackend))\r\n      .catch(err => console.log(err))\r\n    // window.location = '/home'\r\n  }\r\n\r\n\r\n  confirmDelete = e => {\r\n    this.setState({\r\n      showConfirm: true\r\n    })\r\n  }\r\n\r\n  cancelDelete = e => {\r\n    this.setState({\r\n      showConfirm: false\r\n    })\r\n  }\r\n  // END OF DELETING POSTS\r\n\r\n  //EDIT POSTS\r\n  editPost = (e, theValue) => {\r\n    // e.preventDefault();\r\n    const postList = [...this.state.images]\r\n    const theIndex = postList.findIndex(thePost => thePost._id === theValue)\r\n    let postToEdit = postList[theIndex]\r\n    postToEdit.modal = !postList[theIndex].modal\r\n    this.setState({\r\n      images: postList\r\n    })\r\n  }\r\n\r\n  updatePost = (e, thePost) => {\r\n    e.preventDefault();\r\n    const { caption, tags } = this.state\r\n    const imageList = [...this.state.images];\r\n    const theIndex = imageList.indexOf(thePost)\r\n    let captionToUse = '';\r\n    let tagToUse = []\r\n    let tagsArray = []\r\n    let finalArray = []\r\n    tagToUse = tags\r\n    captionToUse = caption\r\n    if (captionToUse.length === 0) {\r\n      captionToUse = imageList[theIndex].caption\r\n    } if (tagToUse.length === 0) {\r\n      tagToUse = imageList[theIndex].tags\r\n    } else {\r\n\r\n    }\r\n\r\n    if (typeof tagsArray === \"string\") {\r\n      tagsArray = tagToUse.split(/[.,\\/ -#]/)\r\n    }\r\n\r\n    finalArray = tagsArray.filter(eachTag => { return eachTag !== \"\" })\r\n\r\n    imageList[theIndex].caption = captionToUse\r\n    imageList[theIndex].tags = finalArray\r\n    imageList[theIndex].modal = !imageList[theIndex].modal\r\n\r\n    this.setState({ images: imageList }, () =>\r\n      axios.put(`${this.state.herokUrl}/updatePost/${thePost._id}`, { caption: captionToUse, tags: tagToUse })\r\n        .then(theValues => {\r\n          this.setState({\r\n            caption: '',\r\n            tags: []\r\n          })\r\n          //() => {\r\n          //   window.location = `/post/${thePost._id}`\r\n          // }\r\n        }).catch(err => console.log(\"A problem happened getting the values!\"))\r\n    )\r\n  }\r\n\r\n  //END OF EDIT POST\r\n\r\n  //EDIT USER BIO/PICTURE\r\n  showEditUser = () => {\r\n    this.setState({\r\n      showEdit: !this.state.showEdit\r\n    })\r\n  }\r\n\r\n  updateUser = (e, theUser) => {\r\n    e.preventDefault();\r\n    const { bio, imageFile, currentUser } = this.state\r\n    if (this.state.imageFile.length !== 0) {\r\n\r\n      //UPLOAD TO CLOUDINARY\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"imageUrl\", this.state.imageFile);\r\n\r\n      service.handleUpload(uploadData)\r\n        .then(response => {\r\n          console.log('response is: ', response);\r\n          // after the console.log we can see that response carries 'secure_url' which we can use to update the state \r\n          this.setState({ imagePost: response.imageUrl }, () => {\r\n            //CALL TO THE SIGNUP ROUTE\r\n            axios.put(`${this.state.herokUrl}/auth/updateUser/${currentUser._id}`, { bio, imageFile: this.state.imagePost, currentUser }, { withCredentials: true })\r\n              .then(theData => {\r\n                const listUsers = [...this.state.users]\r\n                const { bio, imageUrl } = theData.data\r\n                const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\r\n                listUsers[theIndex].bio = bio\r\n                listUsers[theIndex].imageUrl = imageUrl\r\n\r\n                this.setState({\r\n                  users: listUsers,\r\n                  imageUrl: \"\",\r\n                  imageFile: [],\r\n                  showEdit: !this.state.showEdit\r\n                })\r\n\r\n                // window.location = `/profile/${currentUser._id}`\r\n              })\r\n              .catch(err => console.log(err));\r\n\r\n\r\n          })\r\n\r\n        }).catch(err => {\r\n          console.log(\"Error while uploading the file: \", err);\r\n        })\r\n    } else {\r\n      axios.put(`${this.state.herokUrl}/auth/updateUser/${currentUser._id}`, { bio, imageFile, currentUser }, { withCredentials: true })\r\n        .then(theData => {\r\n          const listUsers = [...this.state.users]\r\n          const { bio } = theData.data\r\n          const theIndex = listUsers.findIndex(theUser => theUser._id === currentUser._id)\r\n          listUsers[theIndex].bio = bio\r\n\r\n          this.setState({\r\n            users: listUsers,\r\n            imageUrl: \"\",\r\n            imageFile: [],\r\n            showEdit: !this.state.showEdit\r\n          })\r\n          // window.location.reload();\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n  }\r\n\r\n  //END OF EDIT USER BIO/PICTURE\r\n\r\n\r\n  //FOLLOWING FUNCTIONALITY\r\n  handleFollow = userToFollow => {\r\n    console.log(userToFollow)\r\n    const { currentUser } = this.state\r\n\r\n    axios.post(`${this.state.herokUrl}/follow/${userToFollow}`, currentUser)\r\n      .then(responseFromBackend => {\r\n        const userList = [...this.state.users]\r\n        const myUser = this.state.currentUser\r\n        const users = responseFromBackend.data\r\n        const user1 = users[users.findIndex(theUser => theUser._id === currentUser._id)]\r\n        const user2 = users[users.findIndex(theUser => theUser._id === userToFollow)]\r\n        const theIndex1 = userList.findIndex(userToFind => userToFind._id === user1._id)\r\n        const theIndex2 = userList.findIndex(userToFind => userToFind._id === user2._id)\r\n        myUser.followers = user1.followers\r\n        myUser.following = user1.following\r\n        userList[theIndex1].followers = user1.followers\r\n        userList[theIndex1].following = user1.following\r\n        userList[theIndex2].followers = user2.followers\r\n        userList[theIndex2].following = user2.following\r\n        this.setState({\r\n          users: userList,\r\n          currentUser: myUser\r\n        })\r\n      })\r\n\r\n  }\r\n  //END OF FOLLOWING FUNCTIONALITY\r\n\r\n  // ADD COMMENTS\r\n  handleComment = (e, postId) => {\r\n    e.preventDefault();\r\n    const newComment = {\r\n      owner: this.state.currentUser,\r\n      message: this.state.comment\r\n    }\r\n    const clone = [...this.state.images]\r\n    console.log(clone.findIndex(thePost => thePost._id === postId))\r\n    const theIndex = clone.findIndex(thePost => thePost._id === postId)\r\n    if (theIndex >= 0) {\r\n      clone[theIndex].comments.push({\r\n        user: {\r\n          _id: this.state.currentUser._id,\r\n          username: this.state.currentUser.username,\r\n          imageUrl: this.state.currentUser.imageUrl\r\n        }, comment: this.state.comment\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      images: clone,\r\n      comment: ''\r\n    })\r\n\r\n    axios.put(`${this.state.herokUrl}/addComment/${postId}`, newComment)\r\n      .then(responseFromBackend => console.log(responseFromBackend))\r\n\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  //END OF ADD COMMENTS\r\n\r\n  //DISPLAY FOLLOWING FOLLOWERS LIST CONTAINER\r\n  showFollow = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.currentTarget.innerHTML)\r\n    let theChoice = e.currentTarget.innerHTML\r\n    if (theChoice === 'Followers:') {\r\n      this.setState({\r\n        followContainer: !this.state.followContainer,\r\n        listFollowers: true,\r\n        listFollowing: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        followContainer: !this.state.followContainer,\r\n        listFollowers: false,\r\n        listFollowing: true\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n  //DISPLAY FOLLOWER/FOLLOWING LIST\r\n  showFollowers = (e, theValue) => {\r\n    e.preventDefault()\r\n    let theChoice = e.target.innerHTML\r\n    console.log(theValue)\r\n    if (theChoice === 'Followers') {\r\n      this.setState({\r\n        listFollowers: true,\r\n        listFollowing: false\r\n      })\r\n    } else {\r\n      console.log(\"FOLLOWING!\")\r\n      this.setState({\r\n        listFollowers: false,\r\n        listFollowing: true\r\n      })\r\n    }\r\n  }\r\n\r\n  //DISPLAY LOGIN FORM\r\nshowLoginForm = (e) => {\r\n  e.preventDefault();\r\n  this.setState({\r\n    showLogin: !this.state.showLogin\r\n  })\r\n}\r\n\r\n//DISPLAY SIGNUP FORM\r\nshowSignupForm = (e) => {\r\n  e.preventDefault();\r\n  this.setState({\r\n    showSignup: !this.state.showSignup\r\n  })\r\n}\r\n\r\n//EXIT LOGIN FORM\r\nexitLogin = (e) => {\r\n  e.preventDefault();\r\n  this.setState({\r\n    showLogin: false\r\n  })\r\n}\r\n\r\n// EXIT SIGNUP FORM\r\nexitSignup = (e) => {\r\n  e.preventDefault();\r\n  this.setState({\r\n    showSignup: false\r\n  })\r\n}\r\n\r\n\r\n  //CHANGE QUERY WITH TAGS\r\n  updateQueryBar = (theTag) => {\r\n    console.log(theTag)\r\n    this.setState({\r\n      queryInput: theTag\r\n    })\r\n  }\r\n\r\n  logoutUser = () => {\r\n    socket.emit('end', this.state.currentUser)\r\n    axios.delete(`${this.state.herokUrl}/auth/logout`, { withCredentials: true })\r\n      .then(theUser => {\r\n        console.log(\"DISCONNECTED!\")\r\n        console.log(theUser)\r\n        this.syncCurrentUser(null)\r\n        this.setState({ currentUser: null }, () => {\r\n          // window.location = `http://localhost:3000`\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"CURRENT USER\")\r\n    // console.log(this.state.currentUser)\r\n    // console.log(this.state.appUrl);\r\n    return (\r\n      <div className=\"App\">\r\n      <Header/>\r\n       \r\n        <NavBar currentUser={this.state.currentUser} notifications={this.state.notifications} revealLoginForm={this.showLoginForm} revealSignupForm={this.showSignupForm} logoutUser={this.logoutUser} lastUrl={this.state.lastUrl}   onLogout={this.logoutUser} actualUrl={window.location}/>\r\n        <Switch>\r\n        <Route exact path=\"/\" render={(props) => !this.state.currentUser ? <Home {...props} showSignup={this.state.showSignup} showLogin={this.state.showLogin} exitLogin={this.exitLogin} exitSignup={this.exitSignup} onChangeValue={this.updateForm} changeFile={this.changeFile} handleSubmit={this.loginUser} handleSignUp={this.makeNewUser} onUserChange = { userDoc => this.syncCurrentUser(userDoc)} currentUser = {this.state.currentUser} formValues={this.state}/> : (<Redirect to=\"/home\"/>)}/>\r\n        <Route path=\"/world\" render={(props) =>  <WorldPost {...props} allPosts={this.state.images} renderPosts={this.worldRender} handleLike={this.handleLike} currentUser={this.state.currentUser} query={this.state.queryInput} onChangeValue={this.updateForm} />}/>\r\n        <Route exact path=\"/home\" render={(props) => (<HomeFeed {...props} allPosts={this.state.images} currentUser={this.state.currentUser} handleLike={this.handleLike} />) }/>\r\n        <Route exact path=\"/newPost\" render={(props) => <PostForm {...props} handleSubmit={this.postNewExp} changeFile={this.changeFile} changeUrl={this.changeImgUrl} onChangeValue={this.updateForm} formValues={this.state}/>}/>\r\n        <Route exact path=\"/post/:id\" render={(props) => <SinglePost {...props} postValues={this.state.images} onDelete={this.handleDelete} cancelDelete={this.cancelDelete} confirmDelete={this.confirmDelete} showConfirm={this.state.showConfirm} handleLike={this.handleLike} handleEdit={this.editPost} updatePost={this.updatePost} currentUser={this.state.currentUser} onChangeValue={this.updateForm} comment={this.state.comment} handleComment={this.handleComment} updateQuery={this.updateQueryBar}/>}></Route>\r\n        <Route exact path=\"/profile/:id\" render={(props) => \r\n          this.state.currentUser ? \r\n          (<UserProfile {...props} \r\n            images = {this.state.images} \r\n            currentUser = {this.state.currentUser} \r\n            users={this.state.users}\r\n            showEdit={this.state.showEdit} \r\n            handleFollow={this.handleFollow}\r\n            onChangeValue={this.updateForm}\r\n            handleEditProfile={this.showEditUser}\r\n            changeFile={this.changeFile}\r\n            updateUser={this.updateUser}\r\n            handleShowFollow = {this.showFollow}\r\n            followContainer = {this.state.followContainer}\r\n            showFollowers = {this.showFollowers}\r\n            listFollowing = {this.state.listFollowing}\r\n            listFollowers = {this.state.listFollowers}\r\n            />) : \r\n          (<Redirect to=\"/login\"/>)}/>\r\n        \r\n        </Switch>\r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// BOTH VERSIONS MERGED!\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}